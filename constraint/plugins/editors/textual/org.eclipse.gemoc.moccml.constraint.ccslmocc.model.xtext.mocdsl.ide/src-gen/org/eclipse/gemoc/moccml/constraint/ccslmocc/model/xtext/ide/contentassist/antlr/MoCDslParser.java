/*
 * generated by Xtext 2.31.0
 */
package org.eclipse.gemoc.moccml.constraint.ccslmocc.model.xtext.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.gemoc.moccml.constraint.ccslmocc.model.xtext.ide.contentassist.antlr.internal.InternalMoCDslParser;
import org.eclipse.gemoc.moccml.constraint.ccslmocc.model.xtext.services.MoCDslGrammarAccess;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class MoCDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MoCDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MoCDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getAlternatives_4_1(), "rule__StateRelationBasedLibrary__Alternatives_4_1");
			builder.put(grammarAccess.getRelationDefinitionAccess().getAlternatives(), "rule__RelationDefinition__Alternatives");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getAlternatives_11(), "rule__CCSLStateMachineRelationDefinition__Alternatives_11");
			builder.put(grammarAccess.getTransitionAccess().getAlternatives_8(), "rule__Transition__Alternatives_8");
			builder.put(grammarAccess.getTriggerAccess().getAlternatives_1(), "rule__Trigger__Alternatives_1");
			builder.put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getAlternatives_8(), "rule__StateMachineDefinition__Alternatives_8");
			builder.put(grammarAccess.getBinaryIntegerExpressionAccess().getAlternatives(), "rule__BinaryIntegerExpression__Alternatives");
			builder.put(grammarAccess.getIntegerExpressionAccess().getAlternatives(), "rule__IntegerExpression__Alternatives");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getAlternatives(), "rule__IntegerVariableRef__Alternatives");
			builder.put(grammarAccess.getUnaryIntegerExpressionAccess().getAlternatives(), "rule__UnaryIntegerExpression__Alternatives");
			builder.put(grammarAccess.getIntEqualAccess().getAlternatives(), "rule__IntEqual__Alternatives");
			builder.put(grammarAccess.getBooleanRefAccess().getAlternatives(), "rule__BooleanRef__Alternatives");
			builder.put(grammarAccess.getIntegerRefAccess().getAlternatives(), "rule__IntegerRef__Alternatives");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getAlternatives(), "rule__UnaryIntPlus__Alternatives");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getAlternatives(), "rule__UnaryIntMinus__Alternatives");
			builder.put(grammarAccess.getIntPlusAccess().getAlternatives(), "rule__IntPlus__Alternatives");
			builder.put(grammarAccess.getIntMinusAccess().getAlternatives(), "rule__IntMinus__Alternatives");
			builder.put(grammarAccess.getIntMultiplyAccess().getAlternatives(), "rule__IntMultiply__Alternatives");
			builder.put(grammarAccess.getIntDivideAccess().getAlternatives(), "rule__IntDivide__Alternatives");
			builder.put(grammarAccess.getNotAccess().getAlternatives(), "rule__Not__Alternatives");
			builder.put(grammarAccess.getIntInfAccess().getAlternatives(), "rule__IntInf__Alternatives");
			builder.put(grammarAccess.getIntSupAccess().getAlternatives(), "rule__IntSup__Alternatives");
			builder.put(grammarAccess.getBooleanExpressionAccess().getAlternatives(), "rule__BooleanExpression__Alternatives");
			builder.put(grammarAccess.getIntSupEqualAccess().getAlternatives(), "rule__IntSupEqual__Alternatives");
			builder.put(grammarAccess.getIntInfEqualAccess().getAlternatives(), "rule__IntInfEqual__Alternatives");
			builder.put(grammarAccess.getClassicalExpression0Access().getAlternatives(), "rule__ClassicalExpression0__Alternatives");
			builder.put(grammarAccess.getLibraryAccess().getAlternatives_3_1(), "rule__Library__Alternatives_3_1");
			builder.put(grammarAccess.getExpressionLibraryAccess().getAlternatives_3(), "rule__ExpressionLibrary__Alternatives_3");
			builder.put(grammarAccess.getExpressionLibraryAccess().getExpressionDeclarationsAlternatives_3_1_0(), "rule__ExpressionLibrary__ExpressionDeclarationsAlternatives_3_1_0");
			builder.put(grammarAccess.getRelationLibraryAccess().getAlternatives_3(), "rule__RelationLibrary__Alternatives_3");
			builder.put(grammarAccess.getRelationLibraryAccess().getRelationDeclarationsAlternatives_3_1_0(), "rule__RelationLibrary__RelationDeclarationsAlternatives_3_1_0");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getAlternatives_6_3(), "rule__UserExpressionDefinition_Impl__Alternatives_6_3");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getAlternatives_6_0(), "rule__ConditionalExpressionDefinition__Alternatives_6_0");
			builder.put(grammarAccess.getExternalExpressionDefinitionAccess().getAlternatives_0(), "rule__ExternalExpressionDefinition__Alternatives_0");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getAlternatives_6_0(), "rule__ConditionalRelationDefinition__Alternatives_6_0");
			builder.put(grammarAccess.getExternalRelationDefinitionAccess().getAlternatives_0(), "rule__ExternalRelationDefinition__Alternatives_0");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getExpressionDefinitionAccess().getAlternatives(), "rule__ExpressionDefinition__Alternatives");
			builder.put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getAlternatives_6(), "rule__UserRelationDefinition_Impl__Alternatives_6");
			builder.put(grammarAccess.getConcreteEntityAccess().getAlternatives(), "rule__ConcreteEntity__Alternatives");
			builder.put(grammarAccess.getBindableEntityAccess().getAlternatives(), "rule__BindableEntity__Alternatives");
			builder.put(grammarAccess.getRealExpressionAccess().getAlternatives(), "rule__RealExpression__Alternatives");
			builder.put(grammarAccess.getSeqExpressionAccess().getAlternatives(), "rule__SeqExpression__Alternatives");
			builder.put(grammarAccess.getPrimitiveElementAccess().getAlternatives(), "rule__PrimitiveElement__Alternatives");
			builder.put(grammarAccess.getPrimitiveTypeAccess().getAlternatives(), "rule__PrimitiveType__Alternatives");
			builder.put(grammarAccess.getKernelExpressionDeclAccess().getAlternatives(), "rule__KernelExpressionDecl__Alternatives");
			builder.put(grammarAccess.getKernelRelationDeclAccess().getAlternatives(), "rule__KernelRelationDecl__Alternatives");
			builder.put(grammarAccess.getString0Access().getAlternatives(), "rule__String0__Alternatives");
			builder.put(grammarAccess.getBoolean0Access().getAlternatives(), "rule__Boolean0__Alternatives");
			builder.put(grammarAccess.getIntegerElementAccess().getAlternatives(), "rule__IntegerElement__Alternatives");
			builder.put(grammarAccess.getBooleanElementAccess().getAlternatives_2(), "rule__BooleanElement__Alternatives_2");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEventKindAccess().getAlternatives(), "rule__EventKind__Alternatives");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getGroup(), "rule__StateRelationBasedLibrary__Group__0");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getGroup_4(), "rule__StateRelationBasedLibrary__Group_4__0");
			builder.put(grammarAccess.getImportStatementAccess().getGroup(), "rule__ImportStatement__Group__0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getGroup(), "rule__CCSLStateMachineRelationDefinition__Group__0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getGroup_8(), "rule__CCSLStateMachineRelationDefinition__Group_8__0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getGroup_9(), "rule__CCSLStateMachineRelationDefinition__Group_9__0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getGroup_10(), "rule__CCSLStateMachineRelationDefinition__Group_10__0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getGroup_10_2(), "rule__CCSLStateMachineRelationDefinition__Group_10_2__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_6(), "rule__Transition__Group_6__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_0(), "rule__Transition__Group_8_0__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_0_0(), "rule__Transition__Group_8_0_0__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_0_1(), "rule__Transition__Group_8_0_1__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_1(), "rule__Transition__Group_8_1__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_1_0(), "rule__Transition__Group_8_1_0__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_8_1_1(), "rule__Transition__Group_8_1_1__0");
			builder.put(grammarAccess.getTransitionAccess().getGroup_9(), "rule__Transition__Group_9__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup(), "rule__Trigger__Group__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup_1_0(), "rule__Trigger__Group_1_0__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup_1_0_1(), "rule__Trigger__Group_1_0_1__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup_1_1(), "rule__Trigger__Group_1_1__0");
			builder.put(grammarAccess.getTriggerAccess().getGroup_1_1_3(), "rule__Trigger__Group_1_1_3__0");
			builder.put(grammarAccess.getFinishClockAccess().getGroup(), "rule__FinishClock__Group__0");
			builder.put(grammarAccess.getStartClockAccess().getGroup(), "rule__StartClock__Group__0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getGroup(), "rule__StateMachineDefinition__Group__0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getGroup_5(), "rule__StateMachineDefinition__Group_5__0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getGroup_6(), "rule__StateMachineDefinition__Group_6__0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getGroup_7(), "rule__StateMachineDefinition__Group_7__0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getGroup_7_3(), "rule__StateMachineDefinition__Group_7_3__0");
			builder.put(grammarAccess.getDeclarationBlockAccess().getGroup(), "rule__DeclarationBlock__Group__0");
			builder.put(grammarAccess.getIntegerAssignementBlockAccess().getGroup(), "rule__IntegerAssignementBlock__Group__0");
			builder.put(grammarAccess.getIntegerAssignementBlockAccess().getGroup_5(), "rule__IntegerAssignementBlock__Group_5__0");
			builder.put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
			builder.put(grammarAccess.getStateAccess().getGroup_4(), "rule__State__Group_4__0");
			builder.put(grammarAccess.getStateAccess().getGroup_4_3(), "rule__State__Group_4_3__0");
			builder.put(grammarAccess.getStateAccess().getGroup_5(), "rule__State__Group_5__0");
			builder.put(grammarAccess.getStateAccess().getGroup_5_3(), "rule__State__Group_5_3__0");
			builder.put(grammarAccess.getGuardAccess().getGroup(), "rule__Guard__Group__0");
			builder.put(grammarAccess.getIntSelfPlusAssignAccess().getGroup(), "rule__IntSelfPlusAssign__Group__0");
			builder.put(grammarAccess.getIntSelfPlusAssignAccess().getGroup_1(), "rule__IntSelfPlusAssign__Group_1__0");
			builder.put(grammarAccess.getIntSelfMinusAssignAccess().getGroup(), "rule__IntSelfMinusAssign__Group__0");
			builder.put(grammarAccess.getIntSelfMinusAssignAccess().getGroup_1(), "rule__IntSelfMinusAssign__Group_1__0");
			builder.put(grammarAccess.getIntSelfMultAssignAccess().getGroup(), "rule__IntSelfMultAssign__Group__0");
			builder.put(grammarAccess.getIntSelfMultAssignAccess().getGroup_1(), "rule__IntSelfMultAssign__Group_1__0");
			builder.put(grammarAccess.getIntSelfDivAssignAccess().getGroup(), "rule__IntSelfDivAssign__Group__0");
			builder.put(grammarAccess.getIntSelfDivAssignAccess().getGroup_1(), "rule__IntSelfDivAssign__Group_1__0");
			builder.put(grammarAccess.getIntegerAssignementAccess().getGroup(), "rule__IntegerAssignement__Group__0");
			builder.put(grammarAccess.getIntegerAssignementAccess().getGroup_1(), "rule__IntegerAssignement__Group_1__0");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getGroup_0(), "rule__IntegerVariableRef__Group_0__0");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getGroup_1(), "rule__IntegerVariableRef__Group_1__0");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getGroup_2(), "rule__IntegerVariableRef__Group_2__0");
			builder.put(grammarAccess.getIntEqualAccess().getGroup_0(), "rule__IntEqual__Group_0__0");
			builder.put(grammarAccess.getIntEqualAccess().getGroup_0_1(), "rule__IntEqual__Group_0_1__0");
			builder.put(grammarAccess.getIntEqualAccess().getGroup_1(), "rule__IntEqual__Group_1__0");
			builder.put(grammarAccess.getIntEqualAccess().getGroup_1_1(), "rule__IntEqual__Group_1_1__0");
			builder.put(grammarAccess.getBooleanRefAccess().getGroup_1(), "rule__BooleanRef__Group_1__0");
			builder.put(grammarAccess.getBooleanRefAccess().getGroup_2(), "rule__BooleanRef__Group_2__0");
			builder.put(grammarAccess.getIntegerRefAccess().getGroup_1(), "rule__IntegerRef__Group_1__0");
			builder.put(grammarAccess.getIntegerRefAccess().getGroup_2(), "rule__IntegerRef__Group_2__0");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getGroup_0(), "rule__UnaryIntPlus__Group_0__0");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getGroup_1(), "rule__UnaryIntPlus__Group_1__0");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getGroup_1_1(), "rule__UnaryIntPlus__Group_1_1__0");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getGroup_1_1_2(), "rule__UnaryIntPlus__Group_1_1_2__0");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getGroup_0(), "rule__UnaryIntMinus__Group_0__0");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getGroup_1(), "rule__UnaryIntMinus__Group_1__0");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getGroup_1_1(), "rule__UnaryIntMinus__Group_1_1__0");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getGroup_1_1_2(), "rule__UnaryIntMinus__Group_1_1_2__0");
			builder.put(grammarAccess.getIntPlusAccess().getGroup_0(), "rule__IntPlus__Group_0__0");
			builder.put(grammarAccess.getIntPlusAccess().getGroup_0_1(), "rule__IntPlus__Group_0_1__0");
			builder.put(grammarAccess.getIntPlusAccess().getGroup_1(), "rule__IntPlus__Group_1__0");
			builder.put(grammarAccess.getIntPlusAccess().getGroup_1_1(), "rule__IntPlus__Group_1_1__0");
			builder.put(grammarAccess.getIntMinusAccess().getGroup_0(), "rule__IntMinus__Group_0__0");
			builder.put(grammarAccess.getIntMinusAccess().getGroup_0_1(), "rule__IntMinus__Group_0_1__0");
			builder.put(grammarAccess.getIntMinusAccess().getGroup_1(), "rule__IntMinus__Group_1__0");
			builder.put(grammarAccess.getIntMinusAccess().getGroup_1_1(), "rule__IntMinus__Group_1_1__0");
			builder.put(grammarAccess.getIntMultiplyAccess().getGroup_0(), "rule__IntMultiply__Group_0__0");
			builder.put(grammarAccess.getIntMultiplyAccess().getGroup_0_1(), "rule__IntMultiply__Group_0_1__0");
			builder.put(grammarAccess.getIntMultiplyAccess().getGroup_1(), "rule__IntMultiply__Group_1__0");
			builder.put(grammarAccess.getIntMultiplyAccess().getGroup_1_1(), "rule__IntMultiply__Group_1_1__0");
			builder.put(grammarAccess.getIntDivideAccess().getGroup_0(), "rule__IntDivide__Group_0__0");
			builder.put(grammarAccess.getIntDivideAccess().getGroup_0_1(), "rule__IntDivide__Group_0_1__0");
			builder.put(grammarAccess.getIntDivideAccess().getGroup_1(), "rule__IntDivide__Group_1__0");
			builder.put(grammarAccess.getIntDivideAccess().getGroup_1_1(), "rule__IntDivide__Group_1_1__0");
			builder.put(grammarAccess.getNotAccess().getGroup_0(), "rule__Not__Group_0__0");
			builder.put(grammarAccess.getNotAccess().getGroup_1(), "rule__Not__Group_1__0");
			builder.put(grammarAccess.getNotAccess().getGroup_1_0(), "rule__Not__Group_1_0__0");
			builder.put(grammarAccess.getNotAccess().getGroup_1_0_1(), "rule__Not__Group_1_0_1__0");
			builder.put(grammarAccess.getNotAccess().getGroup_1_0_1_2(), "rule__Not__Group_1_0_1_2__0");
			builder.put(grammarAccess.getAndAccess().getGroup(), "rule__And__Group__0");
			builder.put(grammarAccess.getAndAccess().getGroup_2(), "rule__And__Group_2__0");
			builder.put(grammarAccess.getAndAccess().getGroup_2_2(), "rule__And__Group_2_2__0");
			builder.put(grammarAccess.getOrAccess().getGroup(), "rule__Or__Group__0");
			builder.put(grammarAccess.getOrAccess().getGroup_2(), "rule__Or__Group_2__0");
			builder.put(grammarAccess.getOrAccess().getGroup_2_2(), "rule__Or__Group_2_2__0");
			builder.put(grammarAccess.getXorAccess().getGroup(), "rule__Xor__Group__0");
			builder.put(grammarAccess.getXorAccess().getGroup_2(), "rule__Xor__Group_2__0");
			builder.put(grammarAccess.getXorAccess().getGroup_2_2(), "rule__Xor__Group_2_2__0");
			builder.put(grammarAccess.getIntInfAccess().getGroup_0(), "rule__IntInf__Group_0__0");
			builder.put(grammarAccess.getIntInfAccess().getGroup_0_1(), "rule__IntInf__Group_0_1__0");
			builder.put(grammarAccess.getIntInfAccess().getGroup_1(), "rule__IntInf__Group_1__0");
			builder.put(grammarAccess.getIntInfAccess().getGroup_1_1(), "rule__IntInf__Group_1_1__0");
			builder.put(grammarAccess.getIntSupAccess().getGroup_0(), "rule__IntSup__Group_0__0");
			builder.put(grammarAccess.getIntSupAccess().getGroup_0_1(), "rule__IntSup__Group_0_1__0");
			builder.put(grammarAccess.getIntSupAccess().getGroup_1(), "rule__IntSup__Group_1__0");
			builder.put(grammarAccess.getIntSupAccess().getGroup_1_1(), "rule__IntSup__Group_1_1__0");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getGroup(), "rule__SeqIsEmpty__Group__0");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getGroup_1(), "rule__SeqIsEmpty__Group_1__0");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getGroup_1_2(), "rule__SeqIsEmpty__Group_1_2__0");
			builder.put(grammarAccess.getSeqGetTailAccess().getGroup(), "rule__SeqGetTail__Group__0");
			builder.put(grammarAccess.getSeqGetTailAccess().getGroup_1(), "rule__SeqGetTail__Group_1__0");
			builder.put(grammarAccess.getSeqGetTailAccess().getGroup_1_2(), "rule__SeqGetTail__Group_1_2__0");
			builder.put(grammarAccess.getSeqGetHeadAccess().getGroup(), "rule__SeqGetHead__Group__0");
			builder.put(grammarAccess.getSeqGetHeadAccess().getGroup_1(), "rule__SeqGetHead__Group_1__0");
			builder.put(grammarAccess.getSeqGetHeadAccess().getGroup_1_2(), "rule__SeqGetHead__Group_1_2__0");
			builder.put(grammarAccess.getSeqDecrAccess().getGroup(), "rule__SeqDecr__Group__0");
			builder.put(grammarAccess.getSeqDecrAccess().getGroup_1(), "rule__SeqDecr__Group_1__0");
			builder.put(grammarAccess.getSeqSchedAccess().getGroup(), "rule__SeqSched__Group__0");
			builder.put(grammarAccess.getSeqSchedAccess().getGroup_1(), "rule__SeqSched__Group_1__0");
			builder.put(grammarAccess.getIntSupEqualAccess().getGroup_0(), "rule__IntSupEqual__Group_0__0");
			builder.put(grammarAccess.getIntSupEqualAccess().getGroup_0_1(), "rule__IntSupEqual__Group_0_1__0");
			builder.put(grammarAccess.getIntSupEqualAccess().getGroup_1(), "rule__IntSupEqual__Group_1__0");
			builder.put(grammarAccess.getIntSupEqualAccess().getGroup_1_1(), "rule__IntSupEqual__Group_1_1__0");
			builder.put(grammarAccess.getIntInfEqualAccess().getGroup_0(), "rule__IntInfEqual__Group_0__0");
			builder.put(grammarAccess.getIntInfEqualAccess().getGroup_0_1(), "rule__IntInfEqual__Group_0_1__0");
			builder.put(grammarAccess.getIntInfEqualAccess().getGroup_1(), "rule__IntInfEqual__Group_1__0");
			builder.put(grammarAccess.getIntInfEqualAccess().getGroup_1_1(), "rule__IntInfEqual__Group_1_1__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup(), "rule__Library__Group__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_3(), "rule__Library__Group_3__0");
			builder.put(grammarAccess.getLibraryAccess().getGroup_3_0(), "rule__Library__Group_3_0__0");
			builder.put(grammarAccess.getExpressionLibraryAccess().getGroup(), "rule__ExpressionLibrary__Group__0");
			builder.put(grammarAccess.getRelationLibraryAccess().getGroup(), "rule__RelationLibrary__Group__0");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getGroup(), "rule__ExpressionDeclaration__Group__0");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getGroup_4(), "rule__ExpressionDeclaration__Group_4__0");
			builder.put(grammarAccess.getRelationDeclarationAccess().getGroup(), "rule__RelationDeclaration__Group__0");
			builder.put(grammarAccess.getRelationDeclarationAccess().getGroup_4(), "rule__RelationDeclaration__Group_4__0");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getGroup(), "rule__UserExpressionDefinition_Impl__Group__0");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getGroup_6(), "rule__UserExpressionDefinition_Impl__Group_6__0");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getGroup(), "rule__ConditionalExpressionDefinition__Group__0");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getGroup_6_1(), "rule__ConditionalExpressionDefinition__Group_6_1__0");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getGroup_6_1_5(), "rule__ConditionalExpressionDefinition__Group_6_1_5__0");
			builder.put(grammarAccess.getExternalExpressionDefinitionAccess().getGroup(), "rule__ExternalExpressionDefinition__Group__0");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getGroup(), "rule__ConditionalRelationDefinition__Group__0");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getGroup_6_1(), "rule__ConditionalRelationDefinition__Group_6_1__0");
			builder.put(grammarAccess.getExternalRelationDefinitionAccess().getGroup(), "rule__ExternalRelationDefinition__Group__0");
			builder.put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_2(), "rule__Relation__Group_2__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_6(), "rule__Relation__Group_6__0");
			builder.put(grammarAccess.getRelationAccess().getGroup_6_1(), "rule__Relation__Group_6_1__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup_5(), "rule__Expression__Group_5__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup_5_1(), "rule__Expression__Group_5_1__0");
			builder.put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
			builder.put(grammarAccess.getClockAccess().getGroup(), "rule__Clock__Group__0");
			builder.put(grammarAccess.getExprCaseAccess().getGroup(), "rule__ExprCase__Group__0");
			builder.put(grammarAccess.getRelCaseAccess().getGroup(), "rule__RelCase__Group__0");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getGroup(), "rule__UserRelationDefinition_Impl__Group__0");
			builder.put(grammarAccess.getString0Access().getGroup_0(), "rule__String0__Group_0__0");
			builder.put(grammarAccess.getAbstractEntityAccess().getGroup(), "rule__AbstractEntity__Group__0");
			builder.put(grammarAccess.getRealRefAccess().getGroup(), "rule__RealRef__Group__0");
			builder.put(grammarAccess.getRealRefAccess().getGroup_2(), "rule__RealRef__Group_2__0");
			builder.put(grammarAccess.getUnaryRealPlusAccess().getGroup(), "rule__UnaryRealPlus__Group__0");
			builder.put(grammarAccess.getUnaryRealPlusAccess().getGroup_2(), "rule__UnaryRealPlus__Group_2__0");
			builder.put(grammarAccess.getUnaryRealMinusAccess().getGroup(), "rule__UnaryRealMinus__Group__0");
			builder.put(grammarAccess.getUnaryRealMinusAccess().getGroup_2(), "rule__UnaryRealMinus__Group_2__0");
			builder.put(grammarAccess.getRealPlusAccess().getGroup(), "rule__RealPlus__Group__0");
			builder.put(grammarAccess.getRealPlusAccess().getGroup_2(), "rule__RealPlus__Group_2__0");
			builder.put(grammarAccess.getRealMinusAccess().getGroup(), "rule__RealMinus__Group__0");
			builder.put(grammarAccess.getRealMinusAccess().getGroup_2(), "rule__RealMinus__Group_2__0");
			builder.put(grammarAccess.getRealMultiplyAccess().getGroup(), "rule__RealMultiply__Group__0");
			builder.put(grammarAccess.getRealMultiplyAccess().getGroup_2(), "rule__RealMultiply__Group_2__0");
			builder.put(grammarAccess.getRealEqualAccess().getGroup(), "rule__RealEqual__Group__0");
			builder.put(grammarAccess.getRealEqualAccess().getGroup_2(), "rule__RealEqual__Group_2__0");
			builder.put(grammarAccess.getRealInfAccess().getGroup(), "rule__RealInf__Group__0");
			builder.put(grammarAccess.getRealInfAccess().getGroup_2(), "rule__RealInf__Group_2__0");
			builder.put(grammarAccess.getRealSupAccess().getGroup(), "rule__RealSup__Group__0");
			builder.put(grammarAccess.getRealSupAccess().getGroup_2(), "rule__RealSup__Group_2__0");
			builder.put(grammarAccess.getBooleanVariableRefAccess().getGroup(), "rule__BooleanVariableRef__Group__0");
			builder.put(grammarAccess.getRealVariableRefAccess().getGroup(), "rule__RealVariableRef__Group__0");
			builder.put(grammarAccess.getRealVariableRefAccess().getGroup_1(), "rule__RealVariableRef__Group_1__0");
			builder.put(grammarAccess.getNumberSeqRefAccess().getGroup(), "rule__NumberSeqRef__Group__0");
			builder.put(grammarAccess.getNumberSeqRefAccess().getGroup_1(), "rule__NumberSeqRef__Group_1__0");
			builder.put(grammarAccess.getNumberSeqVariableRefAccess().getGroup(), "rule__NumberSeqVariableRef__Group__0");
			builder.put(grammarAccess.getRealElementAccess().getGroup(), "rule__RealElement__Group__0");
			builder.put(grammarAccess.getRealElementAccess().getGroup_2(), "rule__RealElement__Group_2__0");
			builder.put(grammarAccess.getIntegerElementAccess().getGroup_0(), "rule__IntegerElement__Group_0__0");
			builder.put(grammarAccess.getIntegerElementAccess().getGroup_0_2(), "rule__IntegerElement__Group_0_2__0");
			builder.put(grammarAccess.getIntegerElementAccess().getGroup_1(), "rule__IntegerElement__Group_1__0");
			builder.put(grammarAccess.getBooleanElementAccess().getGroup(), "rule__BooleanElement__Group__0");
			builder.put(grammarAccess.getBooleanElementAccess().getGroup_2_0(), "rule__BooleanElement__Group_2_0__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup(), "rule__SequenceElement__Group__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup_3(), "rule__SequenceElement__Group_3__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup_5(), "rule__SequenceElement__Group_5__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup_5_1(), "rule__SequenceElement__Group_5_1__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup_6(), "rule__SequenceElement__Group_6__0");
			builder.put(grammarAccess.getSequenceElementAccess().getGroup_6_2(), "rule__SequenceElement__Group_6_2__0");
			builder.put(grammarAccess.getStringElementAccess().getGroup(), "rule__StringElement__Group__0");
			builder.put(grammarAccess.getRecordElementAccess().getGroup(), "rule__RecordElement__Group__0");
			builder.put(grammarAccess.getRecordElementAccess().getGroup_2(), "rule__RecordElement__Group_2__0");
			builder.put(grammarAccess.getRecordElementAccess().getGroup_3(), "rule__RecordElement__Group_3__0");
			builder.put(grammarAccess.getRecordElementAccess().getGroup_7(), "rule__RecordElement__Group_7__0");
			builder.put(grammarAccess.getBoxAccess().getGroup(), "rule__Box__Group__0");
			builder.put(grammarAccess.getString1Access().getGroup(), "rule__String1__Group__0");
			builder.put(grammarAccess.getBooleanAccess().getGroup(), "rule__Boolean__Group__0");
			builder.put(grammarAccess.getIntegerAccess().getGroup(), "rule__Integer__Group__0");
			builder.put(grammarAccess.getRealAccess().getGroup(), "rule__Real__Group__0");
			builder.put(grammarAccess.getCharAccess().getGroup(), "rule__Char__Group__0");
			builder.put(grammarAccess.getRecordAccess().getGroup(), "rule__Record__Group__0");
			builder.put(grammarAccess.getRecordAccess().getGroup_4(), "rule__Record__Group_4__0");
			builder.put(grammarAccess.getSequenceTypeAccess().getGroup(), "rule__SequenceType__Group__0");
			builder.put(grammarAccess.getDiscreteClockType_ImplAccess().getGroup(), "rule__DiscreteClockType_Impl__Group__0");
			builder.put(grammarAccess.getDenseClockTypeAccess().getGroup(), "rule__DenseClockType__Group__0");
			builder.put(grammarAccess.getDenseClockTypeAccess().getGroup_3(), "rule__DenseClockType__Group_3__0");
			builder.put(grammarAccess.getDenseClockTypeAccess().getGroup_4(), "rule__DenseClockType__Group_4__0");
			builder.put(grammarAccess.getEnumerationTypeAccess().getGroup(), "rule__EnumerationType__Group__0");
			builder.put(grammarAccess.getEnumerationTypeAccess().getGroup_2(), "rule__EnumerationType__Group_2__0");
			builder.put(grammarAccess.getEnumerationTypeAccess().getGroup_6(), "rule__EnumerationType__Group_6__0");
			builder.put(grammarAccess.getFieldAccess().getGroup(), "rule__Field__Group__0");
			builder.put(grammarAccess.getFieldAccess().getGroup_2(), "rule__Field__Group_2__0");
			builder.put(grammarAccess.getSubClockAccess().getGroup(), "rule__SubClock__Group__0");
			builder.put(grammarAccess.getSubClockAccess().getGroup_2(), "rule__SubClock__Group_2__0");
			builder.put(grammarAccess.getCoincidenceAccess().getGroup(), "rule__Coincidence__Group__0");
			builder.put(grammarAccess.getCoincidenceAccess().getGroup_2(), "rule__Coincidence__Group_2__0");
			builder.put(grammarAccess.getExclusionAccess().getGroup(), "rule__Exclusion__Group__0");
			builder.put(grammarAccess.getExclusionAccess().getGroup_2(), "rule__Exclusion__Group_2__0");
			builder.put(grammarAccess.getPrecedenceAccess().getGroup(), "rule__Precedence__Group__0");
			builder.put(grammarAccess.getPrecedenceAccess().getGroup_2(), "rule__Precedence__Group_2__0");
			builder.put(grammarAccess.getNonStrictPrecedenceAccess().getGroup(), "rule__NonStrictPrecedence__Group__0");
			builder.put(grammarAccess.getNonStrictPrecedenceAccess().getGroup_2(), "rule__NonStrictPrecedence__Group_2__0");
			builder.put(grammarAccess.getUpToAccess().getGroup(), "rule__UpTo__Group__0");
			builder.put(grammarAccess.getUpToAccess().getGroup_2(), "rule__UpTo__Group_2__0");
			builder.put(grammarAccess.getDeferAccess().getGroup(), "rule__Defer__Group__0");
			builder.put(grammarAccess.getDeferAccess().getGroup_2(), "rule__Defer__Group_2__0");
			builder.put(grammarAccess.getStrictSamplingAccess().getGroup(), "rule__StrictSampling__Group__0");
			builder.put(grammarAccess.getStrictSamplingAccess().getGroup_2(), "rule__StrictSampling__Group_2__0");
			builder.put(grammarAccess.getConcatenationAccess().getGroup(), "rule__Concatenation__Group__0");
			builder.put(grammarAccess.getConcatenationAccess().getGroup_2(), "rule__Concatenation__Group_2__0");
			builder.put(grammarAccess.getUnionAccess().getGroup(), "rule__Union__Group__0");
			builder.put(grammarAccess.getUnionAccess().getGroup_2(), "rule__Union__Group_2__0");
			builder.put(grammarAccess.getIntersectionAccess().getGroup(), "rule__Intersection__Group__0");
			builder.put(grammarAccess.getIntersectionAccess().getGroup_2(), "rule__Intersection__Group_2__0");
			builder.put(grammarAccess.getSupAccess().getGroup(), "rule__Sup__Group__0");
			builder.put(grammarAccess.getSupAccess().getGroup_2(), "rule__Sup__Group_2__0");
			builder.put(grammarAccess.getInfAccess().getGroup(), "rule__Inf__Group__0");
			builder.put(grammarAccess.getInfAccess().getGroup_2(), "rule__Inf__Group_2__0");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getGroup(), "rule__NonStrictSampling__Group__0");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getGroup_2(), "rule__NonStrictSampling__Group_2__0");
			builder.put(grammarAccess.getWaitAccess().getGroup(), "rule__Wait__Group__0");
			builder.put(grammarAccess.getWaitAccess().getGroup_2(), "rule__Wait__Group_2__0");
			builder.put(grammarAccess.getDiscretizationAccess().getGroup(), "rule__Discretization__Group__0");
			builder.put(grammarAccess.getDiscretizationAccess().getGroup_2(), "rule__Discretization__Group_2__0");
			builder.put(grammarAccess.getDeathAccess().getGroup(), "rule__Death__Group__0");
			builder.put(grammarAccess.getDeathAccess().getGroup_2(), "rule__Death__Group_2__0");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getNameAssignment_2(), "rule__StateRelationBasedLibrary__NameAssignment_2");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getImportsAssignment_4_0(), "rule__StateRelationBasedLibrary__ImportsAssignment_4_0");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getExpressionLibrariesAssignment_4_1_0(), "rule__StateRelationBasedLibrary__ExpressionLibrariesAssignment_4_1_0");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getRelationLibrariesAssignment_4_1_1(), "rule__StateRelationBasedLibrary__RelationLibrariesAssignment_4_1_1");
			builder.put(grammarAccess.getStateRelationBasedLibraryAccess().getPredefinedTypesAssignment_4_1_2(), "rule__StateRelationBasedLibrary__PredefinedTypesAssignment_4_1_2");
			builder.put(grammarAccess.getImportStatementAccess().getImportURIAssignment_1(), "rule__ImportStatement__ImportURIAssignment_1");
			builder.put(grammarAccess.getImportStatementAccess().getAliasAssignment_3(), "rule__ImportStatement__AliasAssignment_3");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getNameAssignment_2(), "rule__CCSLStateMachineRelationDefinition__NameAssignment_2");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getDeclarationAssignment_4(), "rule__CCSLStateMachineRelationDefinition__DeclarationAssignment_4");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getDeclarationBlockAssignment_7(), "rule__CCSLStateMachineRelationDefinition__DeclarationBlockAssignment_7");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getInitialStatesAssignment_8_1(), "rule__CCSLStateMachineRelationDefinition__InitialStatesAssignment_8_1");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getInitialStatesAssignment_9_1(), "rule__CCSLStateMachineRelationDefinition__InitialStatesAssignment_9_1");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getFinalStatesAssignment_10_1(), "rule__CCSLStateMachineRelationDefinition__FinalStatesAssignment_10_1");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getFinalStatesAssignment_10_2_1(), "rule__CCSLStateMachineRelationDefinition__FinalStatesAssignment_10_2_1");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getStatesAssignment_11_0(), "rule__CCSLStateMachineRelationDefinition__StatesAssignment_11_0");
			builder.put(grammarAccess.getCCSLStateMachineRelationDefinitionAccess().getTransitionsAssignment_11_1(), "rule__CCSLStateMachineRelationDefinition__TransitionsAssignment_11_1");
			builder.put(grammarAccess.getTransitionAccess().getSourceAssignment_2(), "rule__Transition__SourceAssignment_2");
			builder.put(grammarAccess.getTransitionAccess().getTargetAssignment_4(), "rule__Transition__TargetAssignment_4");
			builder.put(grammarAccess.getTransitionAccess().getNameAssignment_6_0(), "rule__Transition__NameAssignment_6_0");
			builder.put(grammarAccess.getTransitionAccess().getTriggerAssignment_8_0_0_1(), "rule__Transition__TriggerAssignment_8_0_0_1");
			builder.put(grammarAccess.getTransitionAccess().getGuardAssignment_8_0_1_1(), "rule__Transition__GuardAssignment_8_0_1_1");
			builder.put(grammarAccess.getTransitionAccess().getGuardAssignment_8_1_0_1(), "rule__Transition__GuardAssignment_8_1_0_1");
			builder.put(grammarAccess.getTransitionAccess().getTriggerAssignment_8_1_1_1(), "rule__Transition__TriggerAssignment_8_1_1_1");
			builder.put(grammarAccess.getTransitionAccess().getActionsAssignment_9_1(), "rule__Transition__ActionsAssignment_9_1");
			builder.put(grammarAccess.getTriggerAccess().getTrueTriggersAssignment_1_0_0(), "rule__Trigger__TrueTriggersAssignment_1_0_0");
			builder.put(grammarAccess.getTriggerAccess().getTrueTriggersAssignment_1_0_1_1(), "rule__Trigger__TrueTriggersAssignment_1_0_1_1");
			builder.put(grammarAccess.getTriggerAccess().getFalseTriggersAssignment_1_1_2(), "rule__Trigger__FalseTriggersAssignment_1_1_2");
			builder.put(grammarAccess.getTriggerAccess().getFalseTriggersAssignment_1_1_3_1(), "rule__Trigger__FalseTriggersAssignment_1_1_3_1");
			builder.put(grammarAccess.getFinishClockAccess().getClockAssignment_3(), "rule__FinishClock__ClockAssignment_3");
			builder.put(grammarAccess.getStartClockAccess().getClockAssignment_3(), "rule__StartClock__ClockAssignment_3");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getNameAssignment_2(), "rule__StateMachineDefinition__NameAssignment_2");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getDeclarationBlockAssignment_4(), "rule__StateMachineDefinition__DeclarationBlockAssignment_4");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getInitialStatesAssignment_5_2(), "rule__StateMachineDefinition__InitialStatesAssignment_5_2");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getInitialStatesAssignment_6_1(), "rule__StateMachineDefinition__InitialStatesAssignment_6_1");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getFinalStatesAssignment_7_2(), "rule__StateMachineDefinition__FinalStatesAssignment_7_2");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getFinalStatesAssignment_7_3_1(), "rule__StateMachineDefinition__FinalStatesAssignment_7_3_1");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getStatesAssignment_8_0(), "rule__StateMachineDefinition__StatesAssignment_8_0");
			builder.put(grammarAccess.getStateMachineDefinitionAccess().getTransitionsAssignment_8_1(), "rule__StateMachineDefinition__TransitionsAssignment_8_1");
			builder.put(grammarAccess.getDeclarationBlockAccess().getConcreteEntitiesAssignment_3(), "rule__DeclarationBlock__ConcreteEntitiesAssignment_3");
			builder.put(grammarAccess.getDeclarationBlockAccess().getClassicalExpressionsAssignment_4(), "rule__DeclarationBlock__ClassicalExpressionsAssignment_4");
			builder.put(grammarAccess.getIntegerAssignementBlockAccess().getNameAssignment_2(), "rule__IntegerAssignementBlock__NameAssignment_2");
			builder.put(grammarAccess.getIntegerAssignementBlockAccess().getActionsAssignment_4(), "rule__IntegerAssignementBlock__ActionsAssignment_4");
			builder.put(grammarAccess.getIntegerAssignementBlockAccess().getActionsAssignment_5_1(), "rule__IntegerAssignementBlock__ActionsAssignment_5_1");
			builder.put(grammarAccess.getStateAccess().getNameAssignment_2(), "rule__State__NameAssignment_2");
			builder.put(grammarAccess.getStateAccess().getInputTransitionsAssignment_4_2(), "rule__State__InputTransitionsAssignment_4_2");
			builder.put(grammarAccess.getStateAccess().getInputTransitionsAssignment_4_3_1(), "rule__State__InputTransitionsAssignment_4_3_1");
			builder.put(grammarAccess.getStateAccess().getOutputTransitionsAssignment_5_2(), "rule__State__OutputTransitionsAssignment_5_2");
			builder.put(grammarAccess.getStateAccess().getOutputTransitionsAssignment_5_3_1(), "rule__State__OutputTransitionsAssignment_5_3_1");
			builder.put(grammarAccess.getGuardAccess().getValueAssignment_1(), "rule__Guard__ValueAssignment_1");
			builder.put(grammarAccess.getIntSelfPlusAssignAccess().getNameAssignment_1_1(), "rule__IntSelfPlusAssign__NameAssignment_1_1");
			builder.put(grammarAccess.getIntSelfPlusAssignAccess().getLeftValueAssignment_2(), "rule__IntSelfPlusAssign__LeftValueAssignment_2");
			builder.put(grammarAccess.getIntSelfPlusAssignAccess().getRightValueAssignment_4(), "rule__IntSelfPlusAssign__RightValueAssignment_4");
			builder.put(grammarAccess.getIntSelfMinusAssignAccess().getNameAssignment_1_1(), "rule__IntSelfMinusAssign__NameAssignment_1_1");
			builder.put(grammarAccess.getIntSelfMinusAssignAccess().getLeftValueAssignment_2(), "rule__IntSelfMinusAssign__LeftValueAssignment_2");
			builder.put(grammarAccess.getIntSelfMinusAssignAccess().getRightValueAssignment_4(), "rule__IntSelfMinusAssign__RightValueAssignment_4");
			builder.put(grammarAccess.getIntSelfMultAssignAccess().getNameAssignment_1_1(), "rule__IntSelfMultAssign__NameAssignment_1_1");
			builder.put(grammarAccess.getIntSelfMultAssignAccess().getLeftValueAssignment_2(), "rule__IntSelfMultAssign__LeftValueAssignment_2");
			builder.put(grammarAccess.getIntSelfMultAssignAccess().getRightValueAssignment_4(), "rule__IntSelfMultAssign__RightValueAssignment_4");
			builder.put(grammarAccess.getIntSelfDivAssignAccess().getNameAssignment_1_1(), "rule__IntSelfDivAssign__NameAssignment_1_1");
			builder.put(grammarAccess.getIntSelfDivAssignAccess().getLeftValueAssignment_2(), "rule__IntSelfDivAssign__LeftValueAssignment_2");
			builder.put(grammarAccess.getIntSelfDivAssignAccess().getRightValueAssignment_4(), "rule__IntSelfDivAssign__RightValueAssignment_4");
			builder.put(grammarAccess.getIntegerAssignementAccess().getNameAssignment_1_1(), "rule__IntegerAssignement__NameAssignment_1_1");
			builder.put(grammarAccess.getIntegerAssignementAccess().getLeftValueAssignment_2(), "rule__IntegerAssignement__LeftValueAssignment_2");
			builder.put(grammarAccess.getIntegerAssignementAccess().getRightValueAssignment_4(), "rule__IntegerAssignement__RightValueAssignment_4");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAssignment_0_0(), "rule__IntegerVariableRef__ReferencedVarAssignment_0_0");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAssignment_1_1(), "rule__IntegerVariableRef__ReferencedVarAssignment_1_1");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getNameAssignment_2_1(), "rule__IntegerVariableRef__NameAssignment_2_1");
			builder.put(grammarAccess.getIntegerVariableRefAccess().getReferencedVarAssignment_2_3(), "rule__IntegerVariableRef__ReferencedVarAssignment_2_3");
			builder.put(grammarAccess.getIntEqualAccess().getNameAssignment_0_1_1(), "rule__IntEqual__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntEqualAccess().getLeftValueAssignment_0_2(), "rule__IntEqual__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntEqualAccess().getRightValueAssignment_0_4(), "rule__IntEqual__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntEqualAccess().getNameAssignment_1_1_1(), "rule__IntEqual__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntEqualAccess().getTypeAssignment_1_1_3(), "rule__IntEqual__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntEqualAccess().getLeftValueAssignment_1_2(), "rule__IntEqual__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntEqualAccess().getRightValueAssignment_1_4(), "rule__IntEqual__RightValueAssignment_1_4");
			builder.put(grammarAccess.getBooleanRefAccess().getReferencedBoolAssignment_0(), "rule__BooleanRef__ReferencedBoolAssignment_0");
			builder.put(grammarAccess.getBooleanRefAccess().getReferencedBoolAssignment_1_1(), "rule__BooleanRef__ReferencedBoolAssignment_1_1");
			builder.put(grammarAccess.getBooleanRefAccess().getNameAssignment_2_1(), "rule__BooleanRef__NameAssignment_2_1");
			builder.put(grammarAccess.getBooleanRefAccess().getReferencedBoolAssignment_2_3(), "rule__BooleanRef__ReferencedBoolAssignment_2_3");
			builder.put(grammarAccess.getIntegerRefAccess().getIntegerElemAssignment_0(), "rule__IntegerRef__IntegerElemAssignment_0");
			builder.put(grammarAccess.getIntegerRefAccess().getIntegerElemAssignment_1_1(), "rule__IntegerRef__IntegerElemAssignment_1_1");
			builder.put(grammarAccess.getIntegerRefAccess().getNameAssignment_2_1(), "rule__IntegerRef__NameAssignment_2_1");
			builder.put(grammarAccess.getIntegerRefAccess().getIntegerElemAssignment_2_3(), "rule__IntegerRef__IntegerElemAssignment_2_3");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getValueAssignment_0_3(), "rule__UnaryIntPlus__ValueAssignment_0_3");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getOperandAssignment_0_5(), "rule__UnaryIntPlus__OperandAssignment_0_5");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getNameAssignment_1_1_1(), "rule__UnaryIntPlus__NameAssignment_1_1_1");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getTypeAssignment_1_1_2_1(), "rule__UnaryIntPlus__TypeAssignment_1_1_2_1");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getValueAssignment_1_4(), "rule__UnaryIntPlus__ValueAssignment_1_4");
			builder.put(grammarAccess.getUnaryIntPlusAccess().getOperandAssignment_1_6(), "rule__UnaryIntPlus__OperandAssignment_1_6");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getValueAssignment_0_3(), "rule__UnaryIntMinus__ValueAssignment_0_3");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getOperandAssignment_0_5(), "rule__UnaryIntMinus__OperandAssignment_0_5");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getNameAssignment_1_1_1(), "rule__UnaryIntMinus__NameAssignment_1_1_1");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getTypeAssignment_1_1_2_1(), "rule__UnaryIntMinus__TypeAssignment_1_1_2_1");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getValueAssignment_1_4(), "rule__UnaryIntMinus__ValueAssignment_1_4");
			builder.put(grammarAccess.getUnaryIntMinusAccess().getOperandAssignment_1_6(), "rule__UnaryIntMinus__OperandAssignment_1_6");
			builder.put(grammarAccess.getIntPlusAccess().getNameAssignment_0_1_1(), "rule__IntPlus__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntPlusAccess().getLeftValueAssignment_0_2(), "rule__IntPlus__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntPlusAccess().getRightValueAssignment_0_4(), "rule__IntPlus__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntPlusAccess().getNameAssignment_1_1_1(), "rule__IntPlus__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntPlusAccess().getTypeAssignment_1_1_3(), "rule__IntPlus__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntPlusAccess().getLeftValueAssignment_1_2(), "rule__IntPlus__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntPlusAccess().getRightValueAssignment_1_4(), "rule__IntPlus__RightValueAssignment_1_4");
			builder.put(grammarAccess.getIntMinusAccess().getNameAssignment_0_1_1(), "rule__IntMinus__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntMinusAccess().getLeftValueAssignment_0_2(), "rule__IntMinus__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntMinusAccess().getRightValueAssignment_0_4(), "rule__IntMinus__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntMinusAccess().getNameAssignment_1_1_1(), "rule__IntMinus__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntMinusAccess().getTypeAssignment_1_1_3(), "rule__IntMinus__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntMinusAccess().getLeftValueAssignment_1_2(), "rule__IntMinus__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntMinusAccess().getRightValueAssignment_1_4(), "rule__IntMinus__RightValueAssignment_1_4");
			builder.put(grammarAccess.getIntMultiplyAccess().getNameAssignment_0_1_1(), "rule__IntMultiply__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntMultiplyAccess().getLeftValueAssignment_0_2(), "rule__IntMultiply__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntMultiplyAccess().getRightValueAssignment_0_4(), "rule__IntMultiply__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntMultiplyAccess().getNameAssignment_1_1_1(), "rule__IntMultiply__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntMultiplyAccess().getTypeAssignment_1_1_3(), "rule__IntMultiply__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntMultiplyAccess().getLeftValueAssignment_1_2(), "rule__IntMultiply__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntMultiplyAccess().getRightValueAssignment_1_4(), "rule__IntMultiply__RightValueAssignment_1_4");
			builder.put(grammarAccess.getIntDivideAccess().getNameAssignment_0_1_1(), "rule__IntDivide__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntDivideAccess().getLeftValueAssignment_0_2(), "rule__IntDivide__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntDivideAccess().getRightValueAssignment_0_4(), "rule__IntDivide__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntDivideAccess().getNameAssignment_1_1_1(), "rule__IntDivide__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntDivideAccess().getTypeAssignment_1_1_3(), "rule__IntDivide__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntDivideAccess().getLeftValueAssignment_1_2(), "rule__IntDivide__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntDivideAccess().getRightValueAssignment_1_4(), "rule__IntDivide__RightValueAssignment_1_4");
			builder.put(grammarAccess.getNotAccess().getOperandAssignment_0_1(), "rule__Not__OperandAssignment_0_1");
			builder.put(grammarAccess.getNotAccess().getNameAssignment_1_0_1_1(), "rule__Not__NameAssignment_1_0_1_1");
			builder.put(grammarAccess.getNotAccess().getTypeAssignment_1_0_1_2_1(), "rule__Not__TypeAssignment_1_0_1_2_1");
			builder.put(grammarAccess.getNotAccess().getOperandAssignment_1_0_2(), "rule__Not__OperandAssignment_1_0_2");
			builder.put(grammarAccess.getAndAccess().getNameAssignment_2_1(), "rule__And__NameAssignment_2_1");
			builder.put(grammarAccess.getAndAccess().getTypeAssignment_2_2_1(), "rule__And__TypeAssignment_2_2_1");
			builder.put(grammarAccess.getAndAccess().getLeftValueAssignment_3(), "rule__And__LeftValueAssignment_3");
			builder.put(grammarAccess.getAndAccess().getRightValueAssignment_5(), "rule__And__RightValueAssignment_5");
			builder.put(grammarAccess.getOrAccess().getNameAssignment_2_1(), "rule__Or__NameAssignment_2_1");
			builder.put(grammarAccess.getOrAccess().getTypeAssignment_2_2_1(), "rule__Or__TypeAssignment_2_2_1");
			builder.put(grammarAccess.getOrAccess().getLeftValueAssignment_3(), "rule__Or__LeftValueAssignment_3");
			builder.put(grammarAccess.getOrAccess().getRightValueAssignment_5(), "rule__Or__RightValueAssignment_5");
			builder.put(grammarAccess.getXorAccess().getNameAssignment_2_1(), "rule__Xor__NameAssignment_2_1");
			builder.put(grammarAccess.getXorAccess().getTypeAssignment_2_2_1(), "rule__Xor__TypeAssignment_2_2_1");
			builder.put(grammarAccess.getXorAccess().getLeftValueAssignment_3(), "rule__Xor__LeftValueAssignment_3");
			builder.put(grammarAccess.getXorAccess().getRightValueAssignment_5(), "rule__Xor__RightValueAssignment_5");
			builder.put(grammarAccess.getIntInfAccess().getNameAssignment_0_1_1(), "rule__IntInf__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntInfAccess().getLeftValueAssignment_0_2(), "rule__IntInf__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntInfAccess().getRightValueAssignment_0_4(), "rule__IntInf__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntInfAccess().getNameAssignment_1_1_1(), "rule__IntInf__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntInfAccess().getTypeAssignment_1_1_3(), "rule__IntInf__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntInfAccess().getLeftValueAssignment_1_2(), "rule__IntInf__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntInfAccess().getRightValueAssignment_1_4(), "rule__IntInf__RightValueAssignment_1_4");
			builder.put(grammarAccess.getIntSupAccess().getNameAssignment_0_1_1(), "rule__IntSup__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntSupAccess().getLeftValueAssignment_0_2(), "rule__IntSup__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntSupAccess().getRightValueAssignment_0_4(), "rule__IntSup__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntSupAccess().getNameAssignment_1_1_1(), "rule__IntSup__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntSupAccess().getTypeAssignment_1_1_3(), "rule__IntSup__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntSupAccess().getLeftValueAssignment_1_2(), "rule__IntSup__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntSupAccess().getRightValueAssignment_1_4(), "rule__IntSup__RightValueAssignment_1_4");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getNameAssignment_1_1(), "rule__SeqIsEmpty__NameAssignment_1_1");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getTypeAssignment_1_2_1(), "rule__SeqIsEmpty__TypeAssignment_1_2_1");
			builder.put(grammarAccess.getSeqIsEmptyAccess().getOperandAssignment_3(), "rule__SeqIsEmpty__OperandAssignment_3");
			builder.put(grammarAccess.getSeqGetTailAccess().getNameAssignment_1_1(), "rule__SeqGetTail__NameAssignment_1_1");
			builder.put(grammarAccess.getSeqGetTailAccess().getTypeAssignment_1_2_1(), "rule__SeqGetTail__TypeAssignment_1_2_1");
			builder.put(grammarAccess.getSeqGetTailAccess().getOperandAssignment_3(), "rule__SeqGetTail__OperandAssignment_3");
			builder.put(grammarAccess.getSeqGetHeadAccess().getNameAssignment_1_1(), "rule__SeqGetHead__NameAssignment_1_1");
			builder.put(grammarAccess.getSeqGetHeadAccess().getTypeAssignment_1_2_1(), "rule__SeqGetHead__TypeAssignment_1_2_1");
			builder.put(grammarAccess.getSeqGetHeadAccess().getOperandAssignment_3(), "rule__SeqGetHead__OperandAssignment_3");
			builder.put(grammarAccess.getSeqDecrAccess().getNameAssignment_1_1(), "rule__SeqDecr__NameAssignment_1_1");
			builder.put(grammarAccess.getSeqDecrAccess().getOperandAssignment_3(), "rule__SeqDecr__OperandAssignment_3");
			builder.put(grammarAccess.getSeqSchedAccess().getNameAssignment_1_1(), "rule__SeqSched__NameAssignment_1_1");
			builder.put(grammarAccess.getSeqSchedAccess().getOperandAssignment_3(), "rule__SeqSched__OperandAssignment_3");
			builder.put(grammarAccess.getSeqSchedAccess().getIntegerExprAssignment_5(), "rule__SeqSched__IntegerExprAssignment_5");
			builder.put(grammarAccess.getIntSupEqualAccess().getNameAssignment_0_1_1(), "rule__IntSupEqual__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntSupEqualAccess().getLeftValueAssignment_0_2(), "rule__IntSupEqual__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntSupEqualAccess().getRightValueAssignment_0_4(), "rule__IntSupEqual__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntSupEqualAccess().getNameAssignment_1_1_1(), "rule__IntSupEqual__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntSupEqualAccess().getTypeAssignment_1_1_3(), "rule__IntSupEqual__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntSupEqualAccess().getLeftValueAssignment_1_2(), "rule__IntSupEqual__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntSupEqualAccess().getRightValueAssignment_1_4(), "rule__IntSupEqual__RightValueAssignment_1_4");
			builder.put(grammarAccess.getIntInfEqualAccess().getNameAssignment_0_1_1(), "rule__IntInfEqual__NameAssignment_0_1_1");
			builder.put(grammarAccess.getIntInfEqualAccess().getLeftValueAssignment_0_2(), "rule__IntInfEqual__LeftValueAssignment_0_2");
			builder.put(grammarAccess.getIntInfEqualAccess().getRightValueAssignment_0_4(), "rule__IntInfEqual__RightValueAssignment_0_4");
			builder.put(grammarAccess.getIntInfEqualAccess().getNameAssignment_1_1_1(), "rule__IntInfEqual__NameAssignment_1_1_1");
			builder.put(grammarAccess.getIntInfEqualAccess().getTypeAssignment_1_1_3(), "rule__IntInfEqual__TypeAssignment_1_1_3");
			builder.put(grammarAccess.getIntInfEqualAccess().getLeftValueAssignment_1_2(), "rule__IntInfEqual__LeftValueAssignment_1_2");
			builder.put(grammarAccess.getIntInfEqualAccess().getRightValueAssignment_1_4(), "rule__IntInfEqual__RightValueAssignment_1_4");
			builder.put(grammarAccess.getLibraryAccess().getNameAssignment_1(), "rule__Library__NameAssignment_1");
			builder.put(grammarAccess.getLibraryAccess().getImportsAssignment_3_0_2(), "rule__Library__ImportsAssignment_3_0_2");
			builder.put(grammarAccess.getLibraryAccess().getExpressionLibrariesAssignment_3_1_0(), "rule__Library__ExpressionLibrariesAssignment_3_1_0");
			builder.put(grammarAccess.getLibraryAccess().getRelationLibrariesAssignment_3_1_1(), "rule__Library__RelationLibrariesAssignment_3_1_1");
			builder.put(grammarAccess.getLibraryAccess().getPredefinedTypesAssignment_3_1_2(), "rule__Library__PredefinedTypesAssignment_3_1_2");
			builder.put(grammarAccess.getExpressionLibraryAccess().getNameAssignment_1(), "rule__ExpressionLibrary__NameAssignment_1");
			builder.put(grammarAccess.getExpressionLibraryAccess().getElementsAssignment_3_0(), "rule__ExpressionLibrary__ElementsAssignment_3_0");
			builder.put(grammarAccess.getExpressionLibraryAccess().getExpressionDeclarationsAssignment_3_1(), "rule__ExpressionLibrary__ExpressionDeclarationsAssignment_3_1");
			builder.put(grammarAccess.getExpressionLibraryAccess().getExpressionDefinitionsAssignment_3_2(), "rule__ExpressionLibrary__ExpressionDefinitionsAssignment_3_2");
			builder.put(grammarAccess.getRelationLibraryAccess().getNameAssignment_1(), "rule__RelationLibrary__NameAssignment_1");
			builder.put(grammarAccess.getRelationLibraryAccess().getElementsAssignment_3_0(), "rule__RelationLibrary__ElementsAssignment_3_0");
			builder.put(grammarAccess.getRelationLibraryAccess().getRelationDeclarationsAssignment_3_1(), "rule__RelationLibrary__RelationDeclarationsAssignment_3_1");
			builder.put(grammarAccess.getRelationLibraryAccess().getRelationDefinitionsAssignment_3_2(), "rule__RelationLibrary__RelationDefinitionsAssignment_3_2");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getNameAssignment_1(), "rule__ExpressionDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getParametersAssignment_3(), "rule__ExpressionDeclaration__ParametersAssignment_3");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getParametersAssignment_4_1(), "rule__ExpressionDeclaration__ParametersAssignment_4_1");
			builder.put(grammarAccess.getExpressionDeclarationAccess().getReturnTypeAssignment_7(), "rule__ExpressionDeclaration__ReturnTypeAssignment_7");
			builder.put(grammarAccess.getRelationDeclarationAccess().getNameAssignment_1(), "rule__RelationDeclaration__NameAssignment_1");
			builder.put(grammarAccess.getRelationDeclarationAccess().getParametersAssignment_3(), "rule__RelationDeclaration__ParametersAssignment_3");
			builder.put(grammarAccess.getRelationDeclarationAccess().getParametersAssignment_4_1(), "rule__RelationDeclaration__ParametersAssignment_4_1");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getNameAssignment_1(), "rule__UserExpressionDefinition_Impl__NameAssignment_1");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getDeclarationAssignment_3(), "rule__UserExpressionDefinition_Impl__DeclarationAssignment_3");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getRootExpressionAssignment_6_2(), "rule__UserExpressionDefinition_Impl__RootExpressionAssignment_6_2");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getConcreteEntitiesAssignment_6_3_0(), "rule__UserExpressionDefinition_Impl__ConcreteEntitiesAssignment_6_3_0");
			builder.put(grammarAccess.getUserExpressionDefinition_ImplAccess().getClassicalExpressionsAssignment_6_3_1(), "rule__UserExpressionDefinition_Impl__ClassicalExpressionsAssignment_6_3_1");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getNameAssignment_1(), "rule__ConditionalExpressionDefinition__NameAssignment_1");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getDeclarationAssignment_3(), "rule__ConditionalExpressionDefinition__DeclarationAssignment_3");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getConcreteEntitiesAssignment_6_0_0(), "rule__ConditionalExpressionDefinition__ConcreteEntitiesAssignment_6_0_0");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getClassicalExpressionsAssignment_6_0_1(), "rule__ConditionalExpressionDefinition__ClassicalExpressionsAssignment_6_0_1");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getExprCasesAssignment_6_1_2(), "rule__ConditionalExpressionDefinition__ExprCasesAssignment_6_1_2");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getExprCasesAssignment_6_1_3(), "rule__ConditionalExpressionDefinition__ExprCasesAssignment_6_1_3");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getDefaultExpressionAssignment_6_1_5_1(), "rule__ConditionalExpressionDefinition__DefaultExpressionAssignment_6_1_5_1");
			builder.put(grammarAccess.getExternalExpressionDefinitionAccess().getNameAssignment_2(), "rule__ExternalExpressionDefinition__NameAssignment_2");
			builder.put(grammarAccess.getExternalExpressionDefinitionAccess().getDeclarationAssignment_4(), "rule__ExternalExpressionDefinition__DeclarationAssignment_4");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getNameAssignment_1(), "rule__ConditionalRelationDefinition__NameAssignment_1");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getDeclarationAssignment_3(), "rule__ConditionalRelationDefinition__DeclarationAssignment_3");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getConcreteEntitiesAssignment_6_0_0(), "rule__ConditionalRelationDefinition__ConcreteEntitiesAssignment_6_0_0");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getClassicalExpressionsAssignment_6_0_1(), "rule__ConditionalRelationDefinition__ClassicalExpressionsAssignment_6_0_1");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getRelCasesAssignment_6_1_2(), "rule__ConditionalRelationDefinition__RelCasesAssignment_6_1_2");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getRelCasesAssignment_6_1_3(), "rule__ConditionalRelationDefinition__RelCasesAssignment_6_1_3");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getDefaultRelationAssignment_6_1_6(), "rule__ConditionalRelationDefinition__DefaultRelationAssignment_6_1_6");
			builder.put(grammarAccess.getExternalRelationDefinitionAccess().getNameAssignment_2(), "rule__ExternalRelationDefinition__NameAssignment_2");
			builder.put(grammarAccess.getExternalRelationDefinitionAccess().getDeclarationAssignment_4(), "rule__ExternalRelationDefinition__DeclarationAssignment_4");
			builder.put(grammarAccess.getRelationAccess().getIsAnAssertionAssignment_0(), "rule__Relation__IsAnAssertionAssignment_0");
			builder.put(grammarAccess.getRelationAccess().getNameAssignment_2_0(), "rule__Relation__NameAssignment_2_0");
			builder.put(grammarAccess.getRelationAccess().getTypeAssignment_3(), "rule__Relation__TypeAssignment_3");
			builder.put(grammarAccess.getRelationAccess().getBindingsAssignment_6_0(), "rule__Relation__BindingsAssignment_6_0");
			builder.put(grammarAccess.getRelationAccess().getBindingsAssignment_6_1_1(), "rule__Relation__BindingsAssignment_6_1_1");
			builder.put(grammarAccess.getExpressionAccess().getNameAssignment_1(), "rule__Expression__NameAssignment_1");
			builder.put(grammarAccess.getExpressionAccess().getTypeAssignment_3(), "rule__Expression__TypeAssignment_3");
			builder.put(grammarAccess.getExpressionAccess().getBindingsAssignment_5_0(), "rule__Expression__BindingsAssignment_5_0");
			builder.put(grammarAccess.getExpressionAccess().getBindingsAssignment_5_1_1(), "rule__Expression__BindingsAssignment_5_1_1");
			builder.put(grammarAccess.getBindingAccess().getAbstractAssignment_0(), "rule__Binding__AbstractAssignment_0");
			builder.put(grammarAccess.getBindingAccess().getBindableAssignment_2(), "rule__Binding__BindableAssignment_2");
			builder.put(grammarAccess.getClockAccess().getNameAssignment_1(), "rule__Clock__NameAssignment_1");
			builder.put(grammarAccess.getClockAccess().getTypeAssignment_3(), "rule__Clock__TypeAssignment_3");
			builder.put(grammarAccess.getExprCaseAccess().getConditionAssignment_1(), "rule__ExprCase__ConditionAssignment_1");
			builder.put(grammarAccess.getExprCaseAccess().getExpressionAssignment_3(), "rule__ExprCase__ExpressionAssignment_3");
			builder.put(grammarAccess.getRelCaseAccess().getConditionAssignment_1(), "rule__RelCase__ConditionAssignment_1");
			builder.put(grammarAccess.getRelCaseAccess().getRelationAssignment_3(), "rule__RelCase__RelationAssignment_3");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getNameAssignment_1(), "rule__UserRelationDefinition_Impl__NameAssignment_1");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getDeclarationAssignment_3(), "rule__UserRelationDefinition_Impl__DeclarationAssignment_3");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getConcreteEntitiesAssignment_6_0(), "rule__UserRelationDefinition_Impl__ConcreteEntitiesAssignment_6_0");
			builder.put(grammarAccess.getUserRelationDefinition_ImplAccess().getClassicalExpressionsAssignment_6_1(), "rule__UserRelationDefinition_Impl__ClassicalExpressionsAssignment_6_1");
			builder.put(grammarAccess.getAbstractEntityAccess().getNameAssignment_0(), "rule__AbstractEntity__NameAssignment_0");
			builder.put(grammarAccess.getAbstractEntityAccess().getTypeAssignment_2(), "rule__AbstractEntity__TypeAssignment_2");
			builder.put(grammarAccess.getAbstractEntityAccess().getDesiredEventKindAssignment_3(), "rule__AbstractEntity__DesiredEventKindAssignment_3");
			builder.put(grammarAccess.getRealRefAccess().getNameAssignment_2_1(), "rule__RealRef__NameAssignment_2_1");
			builder.put(grammarAccess.getRealRefAccess().getRealElemAssignment_4(), "rule__RealRef__RealElemAssignment_4");
			builder.put(grammarAccess.getUnaryRealPlusAccess().getNameAssignment_2_1(), "rule__UnaryRealPlus__NameAssignment_2_1");
			builder.put(grammarAccess.getUnaryRealPlusAccess().getValueAssignment_4(), "rule__UnaryRealPlus__ValueAssignment_4");
			builder.put(grammarAccess.getUnaryRealPlusAccess().getOperandAssignment_6(), "rule__UnaryRealPlus__OperandAssignment_6");
			builder.put(grammarAccess.getUnaryRealMinusAccess().getNameAssignment_2_1(), "rule__UnaryRealMinus__NameAssignment_2_1");
			builder.put(grammarAccess.getUnaryRealMinusAccess().getValueAssignment_4(), "rule__UnaryRealMinus__ValueAssignment_4");
			builder.put(grammarAccess.getUnaryRealMinusAccess().getOperandAssignment_6(), "rule__UnaryRealMinus__OperandAssignment_6");
			builder.put(grammarAccess.getRealPlusAccess().getNameAssignment_2_1(), "rule__RealPlus__NameAssignment_2_1");
			builder.put(grammarAccess.getRealPlusAccess().getLeftValueAssignment_4(), "rule__RealPlus__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealPlusAccess().getRightValueAssignment_6(), "rule__RealPlus__RightValueAssignment_6");
			builder.put(grammarAccess.getRealMinusAccess().getNameAssignment_2_1(), "rule__RealMinus__NameAssignment_2_1");
			builder.put(grammarAccess.getRealMinusAccess().getLeftValueAssignment_4(), "rule__RealMinus__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealMinusAccess().getRightValueAssignment_6(), "rule__RealMinus__RightValueAssignment_6");
			builder.put(grammarAccess.getRealMultiplyAccess().getNameAssignment_2_1(), "rule__RealMultiply__NameAssignment_2_1");
			builder.put(grammarAccess.getRealMultiplyAccess().getLeftValueAssignment_4(), "rule__RealMultiply__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealMultiplyAccess().getRightValueAssignment_6(), "rule__RealMultiply__RightValueAssignment_6");
			builder.put(grammarAccess.getRealEqualAccess().getNameAssignment_2_1(), "rule__RealEqual__NameAssignment_2_1");
			builder.put(grammarAccess.getRealEqualAccess().getLeftValueAssignment_4(), "rule__RealEqual__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealEqualAccess().getRightValueAssignment_6(), "rule__RealEqual__RightValueAssignment_6");
			builder.put(grammarAccess.getRealInfAccess().getNameAssignment_2_1(), "rule__RealInf__NameAssignment_2_1");
			builder.put(grammarAccess.getRealInfAccess().getLeftValueAssignment_4(), "rule__RealInf__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealInfAccess().getRightValueAssignment_6(), "rule__RealInf__RightValueAssignment_6");
			builder.put(grammarAccess.getRealSupAccess().getNameAssignment_2_1(), "rule__RealSup__NameAssignment_2_1");
			builder.put(grammarAccess.getRealSupAccess().getLeftValueAssignment_4(), "rule__RealSup__LeftValueAssignment_4");
			builder.put(grammarAccess.getRealSupAccess().getRightValueAssignment_6(), "rule__RealSup__RightValueAssignment_6");
			builder.put(grammarAccess.getBooleanVariableRefAccess().getNameAssignment_1(), "rule__BooleanVariableRef__NameAssignment_1");
			builder.put(grammarAccess.getBooleanVariableRefAccess().getReferencedVarAssignment_3(), "rule__BooleanVariableRef__ReferencedVarAssignment_3");
			builder.put(grammarAccess.getRealVariableRefAccess().getNameAssignment_1_1(), "rule__RealVariableRef__NameAssignment_1_1");
			builder.put(grammarAccess.getRealVariableRefAccess().getReferencedVarAssignment_3(), "rule__RealVariableRef__ReferencedVarAssignment_3");
			builder.put(grammarAccess.getNumberSeqRefAccess().getNameAssignment_1_1(), "rule__NumberSeqRef__NameAssignment_1_1");
			builder.put(grammarAccess.getNumberSeqRefAccess().getReferencedNumberSeqAssignment_3(), "rule__NumberSeqRef__ReferencedNumberSeqAssignment_3");
			builder.put(grammarAccess.getNumberSeqVariableRefAccess().getNameAssignment_1(), "rule__NumberSeqVariableRef__NameAssignment_1");
			builder.put(grammarAccess.getNumberSeqVariableRefAccess().getReferencedVarAssignment_3(), "rule__NumberSeqVariableRef__ReferencedVarAssignment_3");
			builder.put(grammarAccess.getRealElementAccess().getNameAssignment_1(), "rule__RealElement__NameAssignment_1");
			builder.put(grammarAccess.getRealElementAccess().getTypeAssignment_2_1(), "rule__RealElement__TypeAssignment_2_1");
			builder.put(grammarAccess.getRealElementAccess().getValueAssignment_4(), "rule__RealElement__ValueAssignment_4");
			builder.put(grammarAccess.getIntegerElementAccess().getNameAssignment_0_1(), "rule__IntegerElement__NameAssignment_0_1");
			builder.put(grammarAccess.getIntegerElementAccess().getTypeAssignment_0_2_1(), "rule__IntegerElement__TypeAssignment_0_2_1");
			builder.put(grammarAccess.getIntegerElementAccess().getValueAssignment_0_4(), "rule__IntegerElement__ValueAssignment_0_4");
			builder.put(grammarAccess.getIntegerElementAccess().getNameAssignment_1_0(), "rule__IntegerElement__NameAssignment_1_0");
			builder.put(grammarAccess.getIntegerElementAccess().getValueAssignment_1_2(), "rule__IntegerElement__ValueAssignment_1_2");
			builder.put(grammarAccess.getIntegerElementAccess().getValueAssignment_2(), "rule__IntegerElement__ValueAssignment_2");
			builder.put(grammarAccess.getBooleanElementAccess().getNameAssignment_1(), "rule__BooleanElement__NameAssignment_1");
			builder.put(grammarAccess.getBooleanElementAccess().getTypeAssignment_2_0_1(), "rule__BooleanElement__TypeAssignment_2_0_1");
			builder.put(grammarAccess.getBooleanElementAccess().getValueAssignment_4(), "rule__BooleanElement__ValueAssignment_4");
			builder.put(grammarAccess.getSequenceElementAccess().getNameAssignment_2(), "rule__SequenceElement__NameAssignment_2");
			builder.put(grammarAccess.getSequenceElementAccess().getTypeAssignment_3_1(), "rule__SequenceElement__TypeAssignment_3_1");
			builder.put(grammarAccess.getSequenceElementAccess().getFinitePartAssignment_5_0(), "rule__SequenceElement__FinitePartAssignment_5_0");
			builder.put(grammarAccess.getSequenceElementAccess().getFinitePartAssignment_5_1_1(), "rule__SequenceElement__FinitePartAssignment_5_1_1");
			builder.put(grammarAccess.getSequenceElementAccess().getNonFinitePartAssignment_6_1(), "rule__SequenceElement__NonFinitePartAssignment_6_1");
			builder.put(grammarAccess.getSequenceElementAccess().getNonFinitePartAssignment_6_2_1(), "rule__SequenceElement__NonFinitePartAssignment_6_2_1");
			builder.put(grammarAccess.getStringElementAccess().getNameAssignment_1(), "rule__StringElement__NameAssignment_1");
			builder.put(grammarAccess.getStringElementAccess().getValueAssignment_3(), "rule__StringElement__ValueAssignment_3");
			builder.put(grammarAccess.getRecordElementAccess().getNameAssignment_2_1(), "rule__RecordElement__NameAssignment_2_1");
			builder.put(grammarAccess.getRecordElementAccess().getTypeAssignment_3_1(), "rule__RecordElement__TypeAssignment_3_1");
			builder.put(grammarAccess.getRecordElementAccess().getBoxAssignment_6(), "rule__RecordElement__BoxAssignment_6");
			builder.put(grammarAccess.getRecordElementAccess().getBoxAssignment_7_1(), "rule__RecordElement__BoxAssignment_7_1");
			builder.put(grammarAccess.getBoxAccess().getContainmentAssignment_3(), "rule__Box__ContainmentAssignment_3");
			builder.put(grammarAccess.getString1Access().getNameAssignment_1(), "rule__String1__NameAssignment_1");
			builder.put(grammarAccess.getBooleanAccess().getNameAssignment_1(), "rule__Boolean__NameAssignment_1");
			builder.put(grammarAccess.getIntegerAccess().getNameAssignment_1(), "rule__Integer__NameAssignment_1");
			builder.put(grammarAccess.getRealAccess().getNameAssignment_1(), "rule__Real__NameAssignment_1");
			builder.put(grammarAccess.getCharAccess().getNameAssignment_1(), "rule__Char__NameAssignment_1");
			builder.put(grammarAccess.getRecordAccess().getNameAssignment_1(), "rule__Record__NameAssignment_1");
			builder.put(grammarAccess.getRecordAccess().getFieldAssignment_3(), "rule__Record__FieldAssignment_3");
			builder.put(grammarAccess.getRecordAccess().getFieldAssignment_4_1(), "rule__Record__FieldAssignment_4_1");
			builder.put(grammarAccess.getSequenceTypeAccess().getNameAssignment_1(), "rule__SequenceType__NameAssignment_1");
			builder.put(grammarAccess.getSequenceTypeAccess().getElementTypeAssignment_3(), "rule__SequenceType__ElementTypeAssignment_3");
			builder.put(grammarAccess.getDiscreteClockType_ImplAccess().getNameAssignment_1(), "rule__DiscreteClockType_Impl__NameAssignment_1");
			builder.put(grammarAccess.getDenseClockTypeAccess().getNameAssignment_1(), "rule__DenseClockType__NameAssignment_1");
			builder.put(grammarAccess.getDenseClockTypeAccess().getBaseUnitAssignment_3_1(), "rule__DenseClockType__BaseUnitAssignment_3_1");
			builder.put(grammarAccess.getDenseClockTypeAccess().getPhysicalMagnitudeAssignment_4_1(), "rule__DenseClockType__PhysicalMagnitudeAssignment_4_1");
			builder.put(grammarAccess.getEnumerationTypeAccess().getNameAssignment_2_1(), "rule__EnumerationType__NameAssignment_2_1");
			builder.put(grammarAccess.getEnumerationTypeAccess().getEnumLiteralAssignment_5(), "rule__EnumerationType__EnumLiteralAssignment_5");
			builder.put(grammarAccess.getEnumerationTypeAccess().getEnumLiteralAssignment_6_1(), "rule__EnumerationType__EnumLiteralAssignment_6_1");
			builder.put(grammarAccess.getFieldAccess().getNameAssignment_2_1(), "rule__Field__NameAssignment_2_1");
			builder.put(grammarAccess.getFieldAccess().getTypeAssignment_4(), "rule__Field__TypeAssignment_4");
			builder.put(grammarAccess.getSubClockAccess().getNameAssignment_2_1(), "rule__SubClock__NameAssignment_2_1");
			builder.put(grammarAccess.getSubClockAccess().getRightEntityAssignment_4(), "rule__SubClock__RightEntityAssignment_4");
			builder.put(grammarAccess.getSubClockAccess().getLeftEntityAssignment_6(), "rule__SubClock__LeftEntityAssignment_6");
			builder.put(grammarAccess.getCoincidenceAccess().getNameAssignment_2_1(), "rule__Coincidence__NameAssignment_2_1");
			builder.put(grammarAccess.getCoincidenceAccess().getRightEntityAssignment_4(), "rule__Coincidence__RightEntityAssignment_4");
			builder.put(grammarAccess.getCoincidenceAccess().getLeftEntityAssignment_6(), "rule__Coincidence__LeftEntityAssignment_6");
			builder.put(grammarAccess.getExclusionAccess().getNameAssignment_2_1(), "rule__Exclusion__NameAssignment_2_1");
			builder.put(grammarAccess.getExclusionAccess().getRightEntityAssignment_4(), "rule__Exclusion__RightEntityAssignment_4");
			builder.put(grammarAccess.getExclusionAccess().getLeftEntityAssignment_6(), "rule__Exclusion__LeftEntityAssignment_6");
			builder.put(grammarAccess.getPrecedenceAccess().getNameAssignment_2_1(), "rule__Precedence__NameAssignment_2_1");
			builder.put(grammarAccess.getPrecedenceAccess().getRightEntityAssignment_4(), "rule__Precedence__RightEntityAssignment_4");
			builder.put(grammarAccess.getPrecedenceAccess().getLeftEntityAssignment_6(), "rule__Precedence__LeftEntityAssignment_6");
			builder.put(grammarAccess.getNonStrictPrecedenceAccess().getNameAssignment_2_1(), "rule__NonStrictPrecedence__NameAssignment_2_1");
			builder.put(grammarAccess.getNonStrictPrecedenceAccess().getRightEntityAssignment_4(), "rule__NonStrictPrecedence__RightEntityAssignment_4");
			builder.put(grammarAccess.getNonStrictPrecedenceAccess().getLeftEntityAssignment_6(), "rule__NonStrictPrecedence__LeftEntityAssignment_6");
			builder.put(grammarAccess.getUpToAccess().getNameAssignment_2_1(), "rule__UpTo__NameAssignment_2_1");
			builder.put(grammarAccess.getUpToAccess().getReturnTypeAssignment_4(), "rule__UpTo__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getUpToAccess().getClockToFollowAssignment_6(), "rule__UpTo__ClockToFollowAssignment_6");
			builder.put(grammarAccess.getUpToAccess().getKillerClockAssignment_8(), "rule__UpTo__KillerClockAssignment_8");
			builder.put(grammarAccess.getUpToAccess().getIsPreemptiveAssignment_10(), "rule__UpTo__IsPreemptiveAssignment_10");
			builder.put(grammarAccess.getDeferAccess().getNameAssignment_2_1(), "rule__Defer__NameAssignment_2_1");
			builder.put(grammarAccess.getDeferAccess().getReturnTypeAssignment_4(), "rule__Defer__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getDeferAccess().getBaseClockAssignment_6(), "rule__Defer__BaseClockAssignment_6");
			builder.put(grammarAccess.getDeferAccess().getDelayClockAssignment_8(), "rule__Defer__DelayClockAssignment_8");
			builder.put(grammarAccess.getDeferAccess().getDelayPatternAssignment_10(), "rule__Defer__DelayPatternAssignment_10");
			builder.put(grammarAccess.getStrictSamplingAccess().getNameAssignment_2_1(), "rule__StrictSampling__NameAssignment_2_1");
			builder.put(grammarAccess.getStrictSamplingAccess().getReturnTypeAssignment_4(), "rule__StrictSampling__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getStrictSamplingAccess().getSampledClockAssignment_6(), "rule__StrictSampling__SampledClockAssignment_6");
			builder.put(grammarAccess.getStrictSamplingAccess().getSamplingClockAssignment_8(), "rule__StrictSampling__SamplingClockAssignment_8");
			builder.put(grammarAccess.getConcatenationAccess().getNameAssignment_2_1(), "rule__Concatenation__NameAssignment_2_1");
			builder.put(grammarAccess.getConcatenationAccess().getReturnTypeAssignment_4(), "rule__Concatenation__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getConcatenationAccess().getLeftClockAssignment_6(), "rule__Concatenation__LeftClockAssignment_6");
			builder.put(grammarAccess.getConcatenationAccess().getRightClockAssignment_8(), "rule__Concatenation__RightClockAssignment_8");
			builder.put(grammarAccess.getUnionAccess().getNameAssignment_2_1(), "rule__Union__NameAssignment_2_1");
			builder.put(grammarAccess.getUnionAccess().getReturnTypeAssignment_4(), "rule__Union__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getUnionAccess().getClock1Assignment_6(), "rule__Union__Clock1Assignment_6");
			builder.put(grammarAccess.getUnionAccess().getClock2Assignment_8(), "rule__Union__Clock2Assignment_8");
			builder.put(grammarAccess.getIntersectionAccess().getNameAssignment_2_1(), "rule__Intersection__NameAssignment_2_1");
			builder.put(grammarAccess.getIntersectionAccess().getReturnTypeAssignment_4(), "rule__Intersection__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getIntersectionAccess().getClock1Assignment_6(), "rule__Intersection__Clock1Assignment_6");
			builder.put(grammarAccess.getIntersectionAccess().getClock2Assignment_8(), "rule__Intersection__Clock2Assignment_8");
			builder.put(grammarAccess.getSupAccess().getNameAssignment_2_1(), "rule__Sup__NameAssignment_2_1");
			builder.put(grammarAccess.getSupAccess().getReturnTypeAssignment_4(), "rule__Sup__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getSupAccess().getClock1Assignment_6(), "rule__Sup__Clock1Assignment_6");
			builder.put(grammarAccess.getSupAccess().getClock2Assignment_8(), "rule__Sup__Clock2Assignment_8");
			builder.put(grammarAccess.getInfAccess().getNameAssignment_2_1(), "rule__Inf__NameAssignment_2_1");
			builder.put(grammarAccess.getInfAccess().getReturnTypeAssignment_4(), "rule__Inf__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getInfAccess().getClock1Assignment_6(), "rule__Inf__Clock1Assignment_6");
			builder.put(grammarAccess.getInfAccess().getClock2Assignment_8(), "rule__Inf__Clock2Assignment_8");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getNameAssignment_2_1(), "rule__NonStrictSampling__NameAssignment_2_1");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getReturnTypeAssignment_4(), "rule__NonStrictSampling__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getSampledClockAssignment_6(), "rule__NonStrictSampling__SampledClockAssignment_6");
			builder.put(grammarAccess.getNonStrictSamplingAccess().getSamplingClockAssignment_8(), "rule__NonStrictSampling__SamplingClockAssignment_8");
			builder.put(grammarAccess.getWaitAccess().getNameAssignment_2_1(), "rule__Wait__NameAssignment_2_1");
			builder.put(grammarAccess.getWaitAccess().getReturnTypeAssignment_4(), "rule__Wait__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getWaitAccess().getWaitingClockAssignment_6(), "rule__Wait__WaitingClockAssignment_6");
			builder.put(grammarAccess.getWaitAccess().getWaitingValueAssignment_8(), "rule__Wait__WaitingValueAssignment_8");
			builder.put(grammarAccess.getDiscretizationAccess().getNameAssignment_2_1(), "rule__Discretization__NameAssignment_2_1");
			builder.put(grammarAccess.getDiscretizationAccess().getReturnTypeAssignment_4(), "rule__Discretization__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getDiscretizationAccess().getDenseClockAssignment_6(), "rule__Discretization__DenseClockAssignment_6");
			builder.put(grammarAccess.getDiscretizationAccess().getDiscretizationFactorAssignment_8(), "rule__Discretization__DiscretizationFactorAssignment_8");
			builder.put(grammarAccess.getDeathAccess().getNameAssignment_2_1(), "rule__Death__NameAssignment_2_1");
			builder.put(grammarAccess.getDeathAccess().getReturnTypeAssignment_4(), "rule__Death__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getConditionalExpressionDefinitionAccess().getUnorderedGroup_6(), "rule__ConditionalExpressionDefinition__UnorderedGroup_6");
			builder.put(grammarAccess.getConditionalRelationDefinitionAccess().getUnorderedGroup_6(), "rule__ConditionalRelationDefinition__UnorderedGroup_6");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MoCDslGrammarAccess grammarAccess;

	@Override
	protected InternalMoCDslParser createParser() {
		InternalMoCDslParser result = new InternalMoCDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MoCDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MoCDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
