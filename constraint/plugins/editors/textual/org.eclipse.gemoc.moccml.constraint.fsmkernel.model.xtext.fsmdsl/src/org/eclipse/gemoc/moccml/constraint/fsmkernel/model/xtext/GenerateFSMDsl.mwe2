module org.eclipse.gemoc.moccml.constraint.fsmkernel.model.xtext.fsmdsl.FSMDsl

import org.eclipse.emf.mwe.utils.*
//import org.eclipse.xtext.generator.*
//import org.eclipse.xtext.ui.generator.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*


var projectName = "org.eclipse.gemoc.moccml.constraint.fsmkernel.model.xtext.fsmdsl"
var runtimeProject = "../${projectName}"
var rootPath = ".."

// adapt to the location of Timesquare sources
var timesquareGitPath = "../../../../../../../gitlab_jdeantoni/TimeSquare"


Workflow {
	bean = StandaloneSetup {
		scanClassPath  = true
		platformUri = "${runtimeProject}/.."
		
		
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.CCSLModel.CCSLModelPackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.BasicType.BasicTypePackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.CCSLModel.ClassicalExpression.ClassicalExpressionPackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.CCSLModel.ClockExpressionAndRelation.KernelExpression.KernelExpressionPackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.PrimitivesTypeValue.PrimitivesTypeValuePackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.TimeModelPackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.CCSLModel.ClockExpressionAndRelation.ClockExpressionAndRelationPackage"
		registerGeneratedEPackage = "fr.inria.aoste.timesquare.ccslkernel.model.TimeModel.CCSLModel.ClockExpressionAndRelation.KernelRelation.KernelRelationPackage"
	
		registerGeneratedEPackage = "org.eclipse.gemoc.moccml.constraint.fsmkernel.model.FSMModel.FSMModelPackage"
	    registerGeneratedEPackage = "org.eclipse.gemoc.moccml.constraint.fsmkernel.model.FSMModel.editionextension.EditionExtensionPackage"
	    
	    registerGenModelFile = "${timesquareGitPath}/core/ccslkernel/model/fr.inria.aoste.timesquare.ccslkernel.model/model/TimeModel.genmodel"	    
	    registerGenModelFile = "../../../AS/org.eclipse.gemoc.moccml.constraint.fsmkernel.model/model/FSMModel.genmodel"
	
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}/src-gen"
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}.ui/src-gen"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = projectName
				rootPath = rootPath
				genericIde = {
          			enabled = true
		        }
				
				runtimeTest = {
					enabled = false
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					
					enabled = false
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		language = StandardLanguage {
			name = "org.eclipse.gemoc.moccml.constraint.fsmkernel.model.xtext.FSMDsl"
			fileExtensions = "fsmdsl"
			//referencedResource = "platform:/resource/org.eclipse.gemoc.moccml.constraint.fsmkernel.model/model/FSMModel.genmodel"

			//fragment = ecore2xtext.Ecore2XtextValueConverterServiceFragment2 auto-inject {}
			fragment = org.eclipse.xtext.xtext.generator.exporting.SimpleNamesFragment2{}
//			formatter = {
//				generateStub = true
//				generateXtendStub = false
//			}

			scopeProvider = scoping.ImportNamespacesScopingFragment2 {
				generateStub = true
			}
			quickFixProvider = ui.quickfix.QuickfixProviderFragment2 {
				generateStub = true
			}
			outline = ui.outline.OutlineTreeProviderFragment2 {
				generateStub = true
			}
			parserGenerator = parser.antlr.XtextAntlrGeneratorFragment2 {
				options = {
					classSplitting = true
					backtrack = true
				}				
			}
			serializer = {
				generateStub = false
			}
			validator = {
				composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				composedCheck = "org.eclipse.xtext.validation.ImportUriValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true				
				generateStub = true
			}
//			generator = {
//				generateStub = true
//			}

			
//			junitSupport = {
//				
//				junitVersion = "5"
//				generateStub = true
//			}
		}
	}
}
