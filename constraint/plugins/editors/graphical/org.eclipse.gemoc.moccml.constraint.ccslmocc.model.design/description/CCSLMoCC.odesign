<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:validation="http://www.eclipse.org/sirius/description/validation/1.1.0" name="CCSLMoCC" version="12.0.0.2017041100">
  <ownedViewpoints name="MoCCML" modelFileExtension="ccsl xmi mocdsl moccml">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="State-Based Library Diagram" label="Constraint-Automata Library Diagram" domainClass="moccml.StateRelationBasedLibrary" enablePopupBars="true">
      <metamodel href="http://fr.inria.aoste.timemodel#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//BasicType"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClassicalExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//PrimitivesTypeValue"/>
      <metamodel href="http://org.eclipse.gemoc.mocc.fsmmodel/editionextension/1.0#/"/>
      <metamodel href="../../org.eclipse.gemoc.moccml.constraint.ccslmocc.model/model/Ccslmocc.ecore#/"/>
      <metamodel href="../../org.eclipse.gemoc.moccml.constraint.fsmkernel.model/model/FSMModel.ecore#/"/>
      <validationSet>
        <ownedRules xsi:type="validation:SemanticValidationRule" level="ERROR" targetClass="FSMModel.StateMachineDefinition">
          <audits auditExpression="[self.initialStates->size()>0/]"/>
        </ownedRules>
      </validationSet>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.graphviz.dot" label="Graphviz Dot" description="Layered drawings of directed graphs. The algorithm aims edges in the same direction (top to bottom, or left to right) and then attempts to avoid edge crossings and reduce edge length. Edges are routed as spline curves and are thus drawn very smoothly. This algorithm is very suitable for state machine and activity diagrams, where the direction of edges has an important role."/>
      <defaultLayer name="Default">
        <edgeMappings name="RelationDefToDeclaration" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DelDeclarationRelation']" sourceMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']" targetMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']" targetFinderExpression="feature:declaration" reconnections="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeclarationMoveTarget'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='DeclarationMoveSource']">
          <style lineStyle="dash" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="defines">
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="RelationLibrary" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='NameEditRelationTools']" semanticCandidatesExpression="feature:eAllContents" domainClass="RelationLibrary">
          <subContainerMappings name="StateMachineRelationDefinition" detailDescriptions="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='CreateStateBasedDefDiagram']" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='NameEditRelationTools']" semanticCandidatesExpression="feature:eAllContents" domainClass="moccml.StateMachineRelationDefinition">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/FSM.gif" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="RelationDeclaration" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='EditRelationDeclaration']" semanticCandidatesExpression="feature:eAllContents" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='OpenXtextEditorOnDeclAndSMRDef']" domainClass="RelationDeclaration" childrenPresentation="List" listContainer="true">
            <subNodeMappings name="AbstractEntity" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='NameEditAbstractEntity']" semanticCandidatesExpression="feature:eAllContents" domainClass="AbstractEntity">
              <style xsi:type="style:SquareDescription" labelExpression="service:computeLabel" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Parameter.gif" labelAlignment="LEFT" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelFormat>italic</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:ShapeContainerStyleDescription" arcWidth="2" arcHeight="2" borderSizeComputationExpression="1" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Variable.gif">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/RelationLibrary.jpg" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="LibraryAddingDefaultElement" label="New Library &amp; Required Feature">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationLibraryReq" label="New Relation Library +" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateRelationLibrary.jpg">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="DiscreteClockType" referenceName="predefinedTypes" variableName="disc">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['clock'+self.oclAsType(StateRelationBasedLibrary).predefinedTypes->size()/]"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationLibrary" referenceName="relationLibraries">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newRelationLib'+container->filter(StateRelationBasedLibrary).relationLibraries->size()/]"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newRelationDecl'+container->filter(StateRelationBasedLibrary).numRelationDeclaration()/]"/>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['param'+container->filter(StateRelationBasedLibrary).numFormalParam()/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[(container->filter(StateRelationBasedLibrary).predefinedTypes->asOrderedSet()->first().oclAsType(DiscreteClockType))/]"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateStateBasedDefinitionReq" label="New Automata Definition +" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateFSM.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="StateMachineRelationDefinition" referenceName="relationDefinitions">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFSM'+((container->filter(RelationLibrary)).eContainer())->filter(StateRelationBasedLibrary).numStateMachineRelationDefinition()/]"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.State" referenceName="states">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['S'+((container->filter(RelationLibrary)).eContainer())->filter(StateRelationBasedLibrary).numStateMachineRelationDefinition()/]">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['S'+((container->filter(RelationLibrary)).eContainer())->filter(StateRelationBasedLibrary).numStates()/]"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="initialStates" valueExpression="var:instance"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationDeclarationID" label="New Relation Declaration +" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newRelationDecl'+((container->filter(RelationLibrary)).eContainer())->filter(StateRelationBasedLibrary).numRelationDeclaration()/]"/>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['param'+((container->filter(RelationLibrary)).eContainer())->filter(StateRelationBasedLibrary).numFormalParam()/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="[((container->filter(RelationLibrary)).eContainer()->filter(StateRelationBasedLibrary).predefinedTypes->asOrderedSet()->first()).oclAsType(DiscreteClockType)/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryToolsCreation" label="Library Edition">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationLibrary" label="New Relation Library" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateRelationLibrary.jpg">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationLibrary" referenceName="relationLibraries">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newRelationLib'+container->filter(Library).relationLibraries->size()/]"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ListOfTypes" valueExpression="[self.eContainer()->filter(StateRelationBasedLibrary).getAllExistingTypes()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateRelationDeclaration" label="New Relation Declaration" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/AddStructuralFeature.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newDeclaration'+container->filter(RelationLibrary).relationDeclarations->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="CreateStateBasedDefinition" label="New Automata Definition" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='StateMachineRelationDefinition']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateFSM.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="StateMachineRelationDefinition" referenceName="relationDefinitions">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFSM'+container->filter(RelationLibrary).relationDefinitions->size()/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="SetDeclaration" label="Set Declaration Relation" edgeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@edgeMappings[name='RelationDefToDeclaration']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateDeclaration.gif" connectionStartPrecondition="[preSource.oclAsType(moccml::StateMachineRelationDefinition).declaration=null/]">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="AbstractEntitiesCreation">
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateTypedAbstractEntity" label="New Typed Declaration Parameter" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateStartTypedAbstractEntity" label="New Typed Declaration Parameter Start" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="start"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateFinishTypedAbstractEntity" label="New Typed Declaration Parameter Finish" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="finish"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateSendTypedAbstractEntity" label="New Typed Declaration Parameter Send" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="send"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateReceiveTypedAbstractEntity" label="New Typed Declaration Parameter Receive" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="receive"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateConsumeTypedAbstractEntity" label="New Typed Declaration Parameter Consume" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="consume"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateProduceTypedAbstractEntity" label="New Typed Declaration Parameter Produce" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="produce"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryToolsModification">
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="DeclarationMoveTarget" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.oclAsType(StateMachineRelationDefinition)/]">
                <subModelOperations xsi:type="tool_1:Unset" featureName="declaration" elementExpression="var:source">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DelDeclarationRelation" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="declaration" elementExpression="[self.oclAsType(StateMachineRelationDefinition).declaration/]"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="DeclarationMoveSource" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[target/]">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="[element.oclAsType(StateMachineRelationDefinition).declaration/]"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element/]">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="declaration" elementExpression="[self/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryToolsLabelEdition">
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditAbstractEntity">
            <mask mask="{0}: {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditRelationTools">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditRelationDeclaration">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryToolsNavigation">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditorOnDeclAndSMRDef" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@defaultLayer/@containerMappings[name='RelationLibrary']/@subContainerMappings[name='RelationDeclaration']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.OpenEditorActionCallID" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DiagramCreationDescription" name="CreateStateBasedDefDiagram" label="State Based Diagram" forceRefresh="true" diagramDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']">
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" diagramDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']"/>
            </initialOperation>
            <containerViewVariable name="containerView"/>
            <representationNameVariable name="diagramName"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
      <additionalLayers name="LibraryDefinition" label="Library Definition" activeByDefault="true">
        <containerMappings name="ImportURIContainer" semanticCandidatesExpression="[thisEObject.imports->first()/]" synchronizationLock="true" domainClass="ImportStatement" childrenPresentation="List">
          <subNodeMappings name="ImportURI" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.2/@ownedTools[name='LabelImport']" semanticCandidatesExpression="[self.eContainer().oclAsType(StateRelationBasedLibrary).imports/]" synchronizationLock="true" domainClass="ImportStatement">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="['import &quot;'+self.importURI+'&quot; as '+self.alias/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" showIcon="false" labelExpression="Imported Librairies" labelAlignment="LEFT" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_red']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_red']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings name="ImportedTypeContainer" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DeleteImportedTypes']" semanticCandidatesExpression="[getImportedTypes()->first()/]" synchronizationLock="true" domainClass="BasicType.Type" childrenPresentation="List">
          <subNodeMappings name="ImportedTypeDeclaration" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DeleteImportedTypes']" semanticCandidatesExpression="[containerView.eContainer(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getImportedTypes()/]" synchronizationLock="true" domainClass="BasicType.Type">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.eClass().name+': '+self.name/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="Predefined Types from Imported Librairies" labelAlignment="LEFT" roundedCorner="true" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <containerMappings name="TypeContainer" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DelPredefinedTypesID']" semanticCandidatesExpression="[predefinedTypes->first()/]" synchronizationLock="true" domainClass="BasicType.Type" childrenPresentation="List">
          <subNodeMappings name="TypeDeclaration" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DelPredefinedTypesID']" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.2/@ownedTools[name='LabelType']" semanticCandidatesExpression="[eContainer().oclAsType(StateRelationBasedLibrary).predefinedTypes/]" synchronizationLock="true" domainClass="BasicType.Type">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="[self.eClass().name+': '+self.name/]" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="Predefined Types" roundedCorner="true" backgroundStyle="GradientTopToBottom">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <labelFormat>italic</labelFormat>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="LibraryBasicsTools" label="Types &amp; Imports">
          <ownedTools xsi:type="tool:ToolGroup" name="URICreationTools">
            <tools xsi:type="tool_1:ToolDescription" name="CreateURI" label="Import Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="['NewAlias'+self.eContainer(StateRelationBasedLibrary).imports->size()/]"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="todo"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="['NewAlias'+self.eContainer(StateRelationBasedLibrary).imports->size()/]"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="todo"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="CreateKernelURI" label="Import Kernel Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="kernel"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="DiscreteClockType" referenceName="predefinedTypes" variableName="disc">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['clock'+element->filter(StateRelationBasedLibrary).predefinedTypes->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="kernel"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/kernel.ccslLib"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="DiscreteClockType" referenceName="predefinedTypes" variableName="disc">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['clock'+element->filter(StateRelationBasedLibrary).predefinedTypes->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="CreateCCSLURI" label="Import CCSL Library" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or container.oclIsTypeOf(ImportStatement)/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="ccsl"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsTypeOf(ImportStatement)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer(StateRelationBasedLibrary)/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="ImportStatement" referenceName="imports">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="ccsl"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="platform:/plugin/fr.inria.aoste.timesquare.ccslkernel.model/ccsllibrary/CCSL.ccslLib"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="TypeCreationGroup">
            <tools xsi:type="tool_1:ToolDescription" name="CreateIntegerDeclaration" label="New Integer Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.Integer" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Integer)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.Integer" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Integer)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="CreateBooleanDeclaration" label="New Boolean Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.Boolean" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Boolean)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.Boolean" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::Boolean)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="CreateDiscreteClockTypeDeclaration" label="New Discrete Clock Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.DiscreteClockType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DiscreteClockType)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.DiscreteClockType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DiscreteClockType)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:ToolDescription" name="CreateDenseClockTypeDeclaration" label="New Dense Clock Type Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true">
              <element name="element"/>
              <elementView name="elementView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[element.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.DenseClockType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DenseClockType)->size()/]"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[element.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element.eContainer()/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.DenseClockType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::DenseClockType)->size()/]"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateSequenceTypeOfDeclaration" label="New Sequence Type Of Declaration" precondition="[container.oclIsTypeOf(StateRelationBasedLibrary) or (container.oclIsKindOf(BasicType::Type)and(container.eContainer().oclIsTypeOf(StateRelationBasedLibrary)))/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateRelationBasedLibrary).getAllExistingTypes()->filter(PrimitiveType)/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the sequence" windowTitle="New Sequence Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="[container.oclIsTypeOf(StateRelationBasedLibrary)/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.SequenceType" referenceName="predefinedTypes">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::SequenceType)->size()/]"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="elementType" valueExpression="var:element"/>
                    </subModelOperations>
                  </cases>
                  <cases conditionExpression="[container.oclIsKindOf(BasicType::Type)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[container.eContainer()/]">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="BasicType.SequenceType" referenceName="predefinedTypes">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['New'+self.eClass().name+self.eContainer(StateRelationBasedLibrary).predefinedTypes->filter(BasicType::SequenceType)->size()/]"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="elementType" valueExpression="var:element"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default/>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryBasicsToolsModification">
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="DeleteNotAllowed" precondition="[self.oclIsTypeOf(BasicType::Type)/]" forceRefresh="true" id="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.actions.DeleteNotAllowedID"/>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteImportedTypes" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="CantDeleteElement" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DeleteNotAllowed']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DelPredefinedTypesID" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="CantDeleteElement" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='State-Based%20Library%20Diagram']/@additionalLayers[name='LibraryDefinition']/@toolSections.1/@ownedTools[name='DeleteNotAllowed']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="LibraryBasicsToolsLabelEdition">
          <ownedTools xsi:type="tool:DirectEditLabel" name="LabelType">
            <mask mask="{0}: {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg1"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="LabelImport">
            <mask mask="import &quot;{0}&quot; as {1}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="var:arg1">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="var:arg0"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <subSections name="LibraryBasicsToolsLabelEdition">
            <ownedTools xsi:type="tool:DirectEditLabel" name="LabelType">
              <mask mask="{0}: {1}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg1"/>
              </initialOperation>
            </ownedTools>
            <ownedTools xsi:type="tool:DirectEditLabel" name="LabelImport">
              <mask mask="import &quot;{0}&quot; as {1}"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:SetValue" featureName="alias" valueExpression="var:arg1">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="importURI" valueExpression="var:arg0"/>
                </firstModelOperations>
              </initialOperation>
            </ownedTools>
          </subSections>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="StateMachineRelationDiagram" label="State Machine Relation Diagram" domainClass="moccml.StateMachineRelationDefinition" enablePopupBars="true">
      <metamodel href="http://fr.inria.aoste.timemodel#/"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//BasicType"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClockExpressionAndRelation/KernelRelation"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//CCSLModel/ClassicalExpression"/>
      <metamodel href="http://fr.inria.aoste.timemodel#//PrimitivesTypeValue"/>
      <metamodel href="http://org.eclipse.gemoc.mocc.fsmmodel/editionextension/1.0#/"/>
      <metamodel href="../../org.eclipse.gemoc.moccml.constraint.ccslmocc.model/model/Ccslmocc.ecore#/"/>
      <metamodel href="../../org.eclipse.gemoc.moccml.constraint.fsmkernel.model/model/FSMModel.ecore#/"/>
      <layout xsi:type="description_1:CustomLayoutConfiguration" id="org.eclipse.elk.stress" label="ELK Stress" description="Minimizes the stress within a layout using stress majorization. Stress exists if the euclidean distance between a pair of nodes doesn't match their graph theoretic distance, that is, the shortest path between the two nodes. The method allows to specify individual edge lengths.">
        <layoutOptions xsi:type="description_1:DoubleLayoutOption" id="org.eclipse.elk.stress.epsilon" value="12.0">
          <targets>PARENT</targets>
        </layoutOptions>
      </layout>
      <defaultLayer name="Default">
        <nodeMappings name="FSMState" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DeleteState']" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='SetStateName']" semanticCandidatesExpression="[states/]" domainClass="FSMModel.State">
          <style xsi:type="style:EllipseNodeDescription" borderSizeComputationExpression="2" labelSize="10" showIcon="false" sizeComputationExpression="[self.name.toString().size()+5/]" labelPosition="node" resizeKind="NSEW">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
          <conditionnalStyles predicateExpression="[self.eContainer()->filter(StateMachineDefinition).initialStates->includes(self)/]">
            <style xsi:type="style:BundledImageDescription" showIcon="false" resizeKind="NSEW" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="[self.eContainer()->filter(StateMachineDefinition).finalStates->includes(self)/]">
            <style xsi:type="style:BundledImageDescription" showIcon="false" resizeKind="NSEW" shape="dot">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings name="FSMTransition" label="FSM Transition" deletionDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='DeleteTransition']" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='TransitionName']" semanticCandidatesExpression="feature:transitions" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenXtextEditorTransition']" sourceMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" targetMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" targetFinderExpression="feature:target" sourceFinderExpression="feature:source" domainClass="FSMModel.Transition" useDomainElement="true" reconnections="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='EdgeMoveTgt'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='EdgeMoveSrc']">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_gray']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="feature:name">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="StateMachineToolsCreation" label="State Machine Tools">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMInitialStateCreation" label="New Initial State" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateInitialState.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="initState">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[initState.eContainer()/]">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="initialStates" valueExpression="var:initState"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="FSMTransitionCreation" label="New Transition" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateTransition.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[source.eContainer()/]">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.Transition" referenceName="transitions" variableName="t">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:t">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="var:source"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMStateCreation" label="New State" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateState.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.State" referenceName="states">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:createLabel"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="FSMFinalStateCreation" label="New Final State" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@nodeMappings[name='FSMState']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateFinalNode.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.State" referenceName="states" variableName="finalState">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="service:createLabel"/>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="finalStates" valueExpression="var:finalState"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="StateMachineToolsModification">
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveTgt" forceRefresh="true">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool_1:Unset" featureName="target" elementExpression="var:source">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="target" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="EdgeMoveSrc" forceRefresh="true" reconnectionKind="RECONNECT_SOURCE">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool_1:Unset" featureName="source" elementExpression="[self/]">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="source" valueExpression="[target/]"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteTransition" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[element/]">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="DeleteState" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[self.eContainer(StateMachineRelationDefinition).initialStates->includes(self)/]">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[eContainer()/]">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="initialStates" elementExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="[self.eContainer(StateMachineRelationDefinition).finalStates->includes(self)/]">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[eContainer()/]">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="finalStates" elementExpression="var:element"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="[self.oclAsType(FSMModel::State).inputTransitions/]" iteratorName="inT">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[inT/]">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="[self.oclAsType(FSMModel::State).outputTransitions/]" iteratorName="outT">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[outT/]">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="StateMachineToolsLabelEdition">
          <ownedTools xsi:type="tool:DirectEditLabel" name="SetStateName" label="Set State Name" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="TransitionName">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="StateMachineToolsNavigation">
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="OpenEmbeddedEditorAction" forceRefresh="true" id="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.OpenEmbeddedEditorID"/>
          <ownedTools xsi:type="tool_1:PopupMenu" name="OpenTextDescription" label="Open Textual Description" precondition="[self.oclIsTypeOf(moccml::StateMachineRelationDefinition)/]" forceRefresh="true">
            <menuItemDescription xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.popupOpenEditorActionCallID" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditorTransition" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.OpenEditorActionCallOnTransitionID" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="OpenTransitionDirectEdit" forceRefresh="true">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="OpenTransitionDirectEditOpenPopUp" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="OpenTextDescriptionTransition" label="Open Textual Description" precondition="[self.oclIsTypeOf(FSMModel::Transition)/]" forceRefresh="true">
            <menuItemDescription xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.popupOpenEditorActionCallFromP" forceRefresh="true" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
          </ownedTools>
        </toolSections>
        <decorationDescriptionsSet>
          <decorationDescriptions xsi:type="description_1:MappingBasedDecoration" name="HasSomethingInTransition" position="CENTER" preconditionExpression="[self.guard&lt;>null or self.actions->size()>0 or self.trigger&lt;>null/]" imageExpression="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Action.gif" mappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']"/>
        </decorationDescriptionsSet>
      </defaultLayer>
      <additionalLayers name="Declarations" activeByDefault="true">
        <containerMappings name="DeclarationBlockID" semanticCandidatesExpression="[declarationBlock/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.DeclarationBlock" childrenPresentation="List">
          <subNodeMappings name="ConcreteEntityID" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.1/@ownedTools[name='EditCE']" semanticCandidatesExpression="[concreteEntities/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="ClockExpressionAndRelation.ConcreteEntity">
            <style xsi:type="style:SquareDescription" labelExpression="service:computeLabel" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/QualifierValue.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ExpressionID" semanticCandidatesExpression="[classicalExpressions/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="ClassicalExpression.ClassicalExpression">
            <style xsi:type="style:SquareDescription" labelExpression="service:computeLabel" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/QualifierValue.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelExpression="Local Variables Block" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/DeclarationBloc.gif" roundedCorner="true" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <containerMappings name="RelationDeclarationID" semanticCandidatesExpression="[declaration/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="RelationDeclaration" childrenPresentation="List">
          <subNodeMappings name="AbstractEntityID" labelDirectEdit="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.1/@ownedTools[name='NameEditAbstractEntity']" semanticCandidatesExpression="[parameters/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="ClockExpressionAndRelation.AbstractEntity">
            <style xsi:type="style:SquareDescription" labelExpression="service:computeLabel" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Parameter.gif" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:ShapeContainerStyleDescription" arcWidth="2" arcHeight="2" borderSizeComputationExpression="1" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Variable.gif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="DeclarationsTooling" label="Declarations Edition">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="DeclarationBlockCreation" label="New Variables Block" precondition="[container.oclAsType(moccml::StateMachineRelationDefinition).declarationBlock=null/]" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/DeclarationBloc.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="DeclarationBlock" referenceName="declarationBlock"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="RelationDeclarationBlocCreation" label="New Relation Declaration" precondition="[container.oclAsType(moccml::StateMachineRelationDefinition).declaration=null/]" forceRefresh="true" containerMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Variable.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[container.eContainer(RelationLibrary)/]">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="RelationDeclaration" referenceName="relationDeclarations">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newDeclaration'+eContainer(RelationLibrary).relationDeclarations->size()/]"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="declaration" valueExpression="var:container"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="AbstractEntitiesCreation">
            <tools xsi:type="tool:NodeCreationDescription" name="CreateAbstractEntity" label="New Declaration Parameter" nodeMappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID']/@subNodeMappings[name='AbstractEntityID']" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateTypedAbstractEntity" label="New Typed Declaration Parameter" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateStartTypedAbstractEntity" label="New Typed Declaration Parameter Start" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="start"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateFinishTypedAbstractEntity" label="New Typed Declaration Parameter Finish" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="finish"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateSendTypedAbstractEntity" label="New Typed Declaration Parameter Send" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="send"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateReceiveTypedAbstractEntity" label="New Typed Declaration Parameter Receive" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="receive"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateConsumeTypedAbstractEntity" label="New Typed Declaration Parameter Consume" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="consume"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="CreateProduceTypedAbstractEntity" label="New Typed Declaration Parameter Produce" precondition="[container.oclIsTypeOf(RelationDeclaration)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).eContainer().eContainer(StateRelationBasedLibrary).getAllExistingTypes()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select the type of the declaration parameter" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/CreateParameter.gif" windowTitle="New Declaration Parameter Creation">
              <element name="element"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="AbstractEntity" referenceName="parameters">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="['newFormalParam'+container.oclAsType(RelationDeclaration).parameters->filter(AbstractEntity)->size()/]"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:element"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="desiredEventKind" valueExpression="produce"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="DeclarationsToolingLabelEdition">
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditCE">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="NameEditAbstractEntity">
            <mask mask="'{'{0}'} '{1}: {2}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:arg1"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="DeclarationsToolingNavigation">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ConcreteEntityID'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='RelationDeclarationID']/@subNodeMappings[name='AbstractEntityID'] //@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='Declarations']/@containerMappings[name='DeclarationBlockID']/@subNodeMappings[name='ExpressionID']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.OpenEditorActionCallID" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
      <additionalLayers name="DetailedTransitionLayerID" label="Detailed Transition Layer">
        <nodeMappings name="TransitionDetailID" preconditionExpression="[self.trigger &lt;> null or self.guard&lt;>null or self.actions->isEmpty()=false/]" semanticCandidatesExpression="[eAllContents()/]" doubleClickDescription="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='DetailedTransitionLayerID']/@toolSections.2/@ownedTools[name='OpenXtextEditor']" domainClass="FSMModel.Transition">
          <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" borderLineStyle="dash" showIcon="false" labelExpression="service:computeLabel" sizeComputationExpression="10" labelPosition="node" resizeKind="NSEW" color="//@userColorsPalettes[name='MoCCMLColors']/@entries[name='veryPaleYellow']">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="TransitionContentLink" preconditionExpression="[self.trigger &lt;> null or self.guard&lt;>null or self.actions->isEmpty()=false/]" sourceMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@edgeMappings[name='FSMTransition']" targetMapping="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='DetailedTransitionLayerID']/@nodeMappings[name='TransitionDetailID']" targetFinderExpression="[self/]">
          <style lineStyle="dash" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <toolSections name="TransitionTooling" label="Transition Edition">
          <ownedTools xsi:type="tool:ToolGroup" name="TriggerCreationGroup">
            <tools xsi:type="tool_1:SelectionWizardDescription" name="AddTrueTriggers" label="Add True Triggers On" precondition="[container.oclIsTypeOf(Transition)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).declaration.parameters/]" multiple="true" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select element(s) to trigger on" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Trigger.gif" windowTitle="Selection of Element(s) To Trigger On">
              <element name="elements"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[self.oclAsType(FSMModel::Transition).trigger->isEmpty()/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.Trigger" referenceName="trigger" variableName="trig"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:For" expression="var:elements" iteratorName="e">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[container.oclAsType(FSMModel::Transition).trigger/]">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="trueTriggers" valueExpression="var:e"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool_1:SelectionWizardDescription" name="AddFalseTriggers" label="Add False Triggers On" precondition="[container.oclIsTypeOf(Transition)/]" forceRefresh="true" candidatesExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target.oclAsType(StateMachineRelationDefinition).declaration.parameters/]" multiple="true" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]" message="Select element(s) to trigger on" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Trigger.gif" windowTitle="Selection of Element(s) To Trigger On">
              <element name="elements"/>
              <containerView name="containerView"/>
              <container name="container"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[self.oclAsType(FSMModel::Transition).trigger->isEmpty()/]">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="FSMModel.Trigger" referenceName="trigger" variableName="trig"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[container.oclAsType(FSMModel::Transition).trigger/]">
                    <subModelOperations xsi:type="tool_1:For" expression="var:elements" iteratorName="e">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="falseTriggers" valueExpression="var:e"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="TransitionToolingModification">
          <ownedTools xsi:type="tool:ToolGroup" name="TransitionElementCreationGroup"/>
          <ownedTools xsi:type="tool_1:PaneBasedSelectionWizardDescription" name="RemoveTransitionElement" precondition="[container.oclIsTypeOf(Transition)/]" forceRefresh="true" iconPath="/org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design/images/Delete.png" candidatesExpression="[self.oclAsType(FSMModel::Transition).getTransitionElements()/]" rootExpression="[diagram.oclAsType(viewpoint::DSemanticDecorator).target/]" childrenExpression="[eAllContents()/]">
            <element name="element"/>
            <containerView name="containerView"/>
            <container name="container"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:For" expression="var:element">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[i.oclIsKindOf(FSMModel::AbstractGuard)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[i.oclAsType(FSMModel::AbstractGuard)/]">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:Unset" featureName="guard" elementExpression="[container.oclAsType(FSMModel::Transition)/]"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[i.oclIsKindOf(FSMModel::AbstractAction)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[i.oclAsType(FSMModel::AbstractAction)/]">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="[i.oclIsTypeOf(FSMModel::AbstractTrigger)/]">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="[i.oclAsType(FSMModel::AbstractTrigger)/]">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="TransitionToolingNavigation">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="OpenXtextEditor" label="Open Xtext Editor" forceRefresh="true" mappings="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@additionalLayers[name='DetailedTransitionLayerID']/@nodeMappings[name='TransitionDetailID']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaActionCall" name="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.OpenEditorActionCallID" action="//@ownedViewpoints[name='MoCCML']/@ownedRepresentations[name='StateMachineRelationDiagram']/@defaultLayer/@toolSections.3/@ownedTools[name='OpenEmbeddedEditorAction']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </additionalLayers>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.eclipse.gemoc.moccml.constraint.ccslmocc.model.design.services.MoCMLServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="MoCCMLColors">
    <entries xsi:type="description:UserFixedColor" red="255" green="255" blue="240" name="veryPaleYellow"/>
  </userColorsPalettes>
</description:Group>
